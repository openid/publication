


Draft                                                        D. Recordon
                                                                VeriSign
                                                           June 22, 2007


     OpenID Provider Authentication Policy Extension 1.0 - Draft 1













































Recordon                                                        [Page 1]

                  OpenID Provider Auth Policy Extension        June 2007


Abstract

   This extension to the OpenID Authentication protocol provides means
   for a Relying Party to request previously agreed upon authentication
   policies be applied by the OpenID Provider and for an OpenID Provider
   to inform a Relying Party what authentication policies were used.
   Thus a Relying Party can request the End User authenticate, for
   example, by means which are resistant to common phishing attacks or
   that provide for multi-factor authentication.  Likewise, the OpenID
   Provider is able to convey to the Relying Party that the End User
   either met or did not meet the requirements of the requested policy,
   or policies, in the OpenID Authentication response message as well as
   the general strength of the credential(s) being used.

   This extension is not aimed at answering all questions around the
   quality of an OpenID Authentication assertion.  Rather, it is
   designed to be balanced with information the Relying Party already
   has in regards to the OpenID Provider and the level of trust it
   places in it.  It is envisioned that if additional information is
   needed about processes such as new End User enrollment on the OpenID
   Provider, this will either be conveyed by out-of-band methods or in
   other extensions such as OpenID Attribute Exchange.  It is expected
   that other aspects (e.g. security characteristics, credential
   provisioning, etc) could be dealt with in the future, though End User
   privacy concerns must be kept in mind especially when discussing
   enrollment procedures.

   As an extension, it requires no changes to the OpenID Authentication
   protocol and is viewed as an optional extension though its use is
   certainly recommended.  This extension can be used with both OpenID
   Authentication versions 1.1 and 2.0.

   While none of the information expressed via this extension can be
   verified by the Relying Party using technology alone, this does not
   limit the utility of this extension.  The lack of a single required
   trust model within OpenID allows for Relying Parties to decide which
   Providers they trust using whatever criteria they choose - likewise
   RPs will decide whether or not to trust claims as to authentication
   policy from such OpenID Providers as well.












Recordon                                                        [Page 2]

                  OpenID Provider Auth Policy Extension        June 2007


Table of Contents

   1.  Definitions  . . . . . . . . . . . . . . . . . . . . . . . . .  4
     1.1.  Requirements Notation  . . . . . . . . . . . . . . . . . .  4
     1.2.  Conventions  . . . . . . . . . . . . . . . . . . . . . . .  4
     1.3.  Terminology  . . . . . . . . . . . . . . . . . . . . . . .  4
   2.  Extension Overview . . . . . . . . . . . . . . . . . . . . . .  5
   3.  Advertising Supported Policies . . . . . . . . . . . . . . . .  6
   4.  Defined Authentication Policies  . . . . . . . . . . . . . . .  7
   5.  Authentication Protocol  . . . . . . . . . . . . . . . . . . .  8
     5.1.  Request Parameters . . . . . . . . . . . . . . . . . . . .  8
     5.2.  Response Parameters  . . . . . . . . . . . . . . . . . . .  8
   6.  Security Considerations  . . . . . . . . . . . . . . . . . . . 10
     6.1.  NIST Assurance Levels  . . . . . . . . . . . . . . . . . . 10
   7.  Examples . . . . . . . . . . . . . . . . . . . . . . . . . . . 12
     7.1.  Authentication Method Classifications  . . . . . . . . . . 12
   8.  Acknowledgements . . . . . . . . . . . . . . . . . . . . . . . 15
   9.  Normative References . . . . . . . . . . . . . . . . . . . . . 16
   Editorial Comments . . . . . . . . . . . . . . . . . . . . . . . .
   Author's Address . . . . . . . . . . . . . . . . . . . . . . . . . 18































Recordon                                                        [Page 3]

                  OpenID Provider Auth Policy Extension        June 2007


1.  Definitions

1.1.  Requirements Notation

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in [RFC2119].

1.2.  Conventions

   Throughout this document, values are quoted to indicate that they are
   to be taken literally.  When using these values in protocol messages,
   the quotes MUST NOT be used as part of the value.

   All OpenID Provider Authentication Policy Extension (PAPE) messages
   MUST contain the following extension namespace declaration, as
   specified in the Extensions section of [OpenIDAuthentication2.0].


       openid.ns.<alias>=http://specs.openid.net/extensions/pape/1.0


   The actual extension namespace alias should be determined on a per-
   message basis by the party composing the messages, in such a manner
   as to avoid conflicts between multiple extensions.  For the purposes
   of this document and when constructing OpenID 1.1 messages, the
   extension namespace alias SHALL be "pape".

1.3.  Terminology

   The following terms are defined in [OpenIDAuthentication2.0]:

   o  Identifier

   o  OpenID Provider (OP)

   o  Relying Party (RP)

   o  User-Agent












Recordon                                                        [Page 4]

                  OpenID Provider Auth Policy Extension        June 2007


2.  Extension Overview

   1.  As part of the [Yadis] Discovery process, OpenID Providers can
       optionally add supported authentication policies to an End User's
       XRDS document.  This aides Relying Parties in choosing between
       multiple listed OPs depending on authentication policy
       requirements.

   2.  The Relying Party includes parameters in the OpenID
       Authentication request describing its preferences for
       authentication policy for the current assertion.

   3.  The OpenID Provider processes the PAPE request, prompting the End
       User to fulfill the requested policies during the authentication
       process.

   4.  As part of the OpenID Provider's response to the Relying Party,
       the OP includes PAPE information around the End User's
       authentication.  An OP MAY include this response information even
       if not requested by the RP.

   5.  When processing the OpenID Provider's response, the Relying Party
       takes the PAPE information into account when determining if the
       End User should be sent through additional verification steps or
       if the OpenID login process cannot proceed due to not meeting
       policy requirements.

























Recordon                                                        [Page 5]

                  OpenID Provider Auth Policy Extension        June 2007


3.  Advertising Supported Policies

   Via the use of [Yadis] within OpenID, Relying Parties are able to
   discover OpenID Provider service information in an automated fashion.
   This is used within OpenID Authentication for a RP to discover what
   version of the protocol each OP listed supports as well as any
   extensions, such as this one, that are supported.  To aide in the
   process of a Relying Party selecting which OP they wish to interact
   with, it is advised that the following information be added to the
   End User's XRDS document.

   When advertising supported policies, each policy URI MUST be added as
   the value of an <xrd:Type> element of an OpenID <xrd:Service> element
   in an XRDS document.





































Recordon                                                        [Page 6]

                  OpenID Provider Auth Policy Extension        June 2007


4.  Defined Authentication Policies

   The following are previously agreed upon policies and policy
   identifiers describing how the End User authenticated to their OP.
   Additional policies can be agreed upon and used without having to
   make changes to this document.  The policies described below are
   designed to be a starting point to cover the most common use-cases.
   Additional polices can be found at
   http://schemas.openid.net/pape/policies/. [anchor6]

   o  Phishing-Resistant Authentication [anchor7]

         http://schemas.openid.net/pape/policies/2007/06/
         phishing-resistant

         An authentication mechanism where the End User does not provide
         a shared secret to a party potentially under the control of the
         Relying Party.  (Note that the potentially malicious Relying
         Party controls where the User-Agent is redirected to and thus
         may not send it to the End User's actual OpenID Provider).

   o  Multi-Factor Authentication

         http://schemas.openid.net/pape/policies/2007/06/multi-factor

         An authentication mechanism where the End User authenticates to
         the OpenID Provider by providing over one authentication
         factor.  Common authentication factors are something you know,
         something you have, and something you are.  An example would be
         authentication using a password and a software token or digital
         certificate.

   o  Physical Multi-Factor Authentication

         http://schemas.openid.net/pape/policies/2007/06/
         multi-factor-physical

         An authentication mechanism where the End User authenticates to
         the OpenID Provider by providing over one authentication factor
         where at least one of the factors is a physical factor such as
         a hardware device or biometric.  Common authentication factors
         are something you know, something you have, and something you
         are.  An example would be authentication using a password and a
         hardware token.







Recordon                                                        [Page 7]

                  OpenID Provider Auth Policy Extension        June 2007


5.  Authentication Protocol

5.1.  Request Parameters

   The following parameters can be included during an OpenID
   Authentication request [OpenIDAuthentication2.0] by the Relying
   Party.

   o  openid.ns.pape

         Value: "http://specs.openid.net/extensions/pape/1.0"

   o  openid.pape.max_auth_age

         (Optional) If the End User has not actively authenticated to
         the OP within the number of seconds specified in a manner
         fitting the requested policies, the OP MUST authenticate the
         End User for this request.

         Value: Numeric value greater than or equal to zero in seconds.

         The OP should realize that not adhering to the request for re-
         authentication most likely means that the End User will not be
         allowed access to the services provided by the RP.

   o  openid.pape.preferred_auth_policies

         Zero or more authentication policy URIs that the OP SHOULD
         conform to when authenticating the user.  If multiple policies
         are requested, the OP SHALL try to satisfy as many as it can.
         If no policies are requested, the RP is interested in other
         information such as the authentication age.

         Value: Space separated list of authentication policy URIs.

5.2.  Response Parameters

   In response to a Relying Party's request, the following parameters
   MUST be included in the OpenID Authentication Response.  All response
   parameters MUST be included in the signature of the Authentication
   Response.  It is RECOMMENDED that an OP supporting this extension
   include the following parameters even if not requested by the Relying
   Party.

   All response parameters MUST describe the End User's current session
   with the OpenID Provider.





Recordon                                                        [Page 8]

                  OpenID Provider Auth Policy Extension        June 2007


   o  openid.ns.pape

         Value: "http://specs.openid.net/extensions/pape/1.0"

   o  openid.pape.auth_policies

         One or more authentication policy URIs that the OP conformed to
         when authenticating the End User.

         Value: Space separated list of authentication policy URIs.

         Note: If no policies were met though the OP wishes to convey
         other information in the response, this parameter MUST be
         included when an empty value.

   o  openid.pape.auth_age

         (Optional) The number of seconds since the End User has
         actively authenticated to the OP in a manner fitting the
         requested policies.

         Value: Numeric value greater than or equal to zero in seconds.

         Note: If the RP's request included this parameter then the OP
         MUST include it in its response.  If it was not requested, the
         OP MAY choose to include it in its response.

   o  openid.pape.nist_auth_level

         (Optional) The Assurance Level as defined by the National
         Institute of Standards and Technology (NIST) in Special
         Publication 800-63 [NIST_SP800-63] corresponding to the
         authentication method and policies employed by the OP when
         authenticating the End User.

         Value: Numeric value between 0 and 4 inclusive.

         Note: Level 0 is not an assurance level defined by NIST, but
         rather SHOULD be used to signify that the OP recognizes the
         parameter and the End User authentication did not meet the
         requirements of Level 1.  See Section 7.1.2 for high-level
         example classifications of authentication methods within the
         defined levels.








Recordon                                                        [Page 9]

                  OpenID Provider Auth Policy Extension        June 2007


6.  Security Considerations

   As to commonly accepted security practices, it should be noted that
   the overall strength of any authentication is only as strong as its
   weakest step.  It is thus recommended that provisioning of phishing-
   resistant and other credentials stronger than shared secrets should
   be accomplished using methods that are at least as strong as the
   credential being provisioned.  By counter-example, allowing people to
   retrieve a phishing-resistant credential using only a phishable
   shared secret negates much of the value provided by the phishing-
   resistant credential itself.

   OpenID Providers need to make smart decisions as to the level of
   authentication that they assert the End User performed in comparison
   to that requested by the Relying Party.  For example, if the RP were
   to request phishing-resistant authentication it may or may not make
   sense for the OP to actually tell it that the End User did in fact
   perform phishing-resistant, physical multi-factor, and NIST Level 2
   authentication.  While there are use cases where the OP should
   provide the true strength of the authentication if it is above the
   request, there are also use cases where the OP should only assert to
   the level requested.

   One example of the later would be in an online banking scenario where
   the End User is solely viewing their balance and thus the RP requests
   phishing-resistant authentication.  If the OP were to actually assert
   that the user performed stronger authentication than requested,
   additional access may be granted to the End User at the RP.  While in
   many cases this may be desired, in this scenario it increases the
   risk in terms of if the End User were to not end their session with
   the RP and leave their User-Agent unsecured.  Rather by the OP only
   responding to the level requested, and the RP making a second request
   for a higher level when it is needed at the time, it can reduce the
   overall risk.  An example of this is that when working on Linux
   systems you do not login as the "root" user at all times.

6.1.  NIST Assurance Levels

   Depending on the particular use case being satisfied by the
   authentication response and PAPE information, the OpenID Provider
   will have to make a decision, ideally with the consent of the End
   User, as if it will include the "openid.pape.nist_auth_level"
   parameter.  This information is designed to give Relying Parties more
   information around the strength of credentials used without actually
   disclosing the specific credential type.  Disclosing the specific
   credential type can be considered a potential privacy or security
   risk.




Recordon                                                       [Page 10]

                  OpenID Provider Auth Policy Extension        June 2007


   It is RECOMMENDED that this parameter always be included in the
   response from the OP.  This holds true even in cases where the End
   User authentication does not meet one of the defined Authentication
   Policies.  For example, if the End User is authenticating using a
   password via HTTPS there is still value to the RP in knowing if the
   strength of the Password corresponds to the entropy requirements laid
   out by Level 1 or 2 or that it does not even meet the minimum
   requirement for the lowest level.  With that said, discretion needs
   to be used by OP's as conveying that one of their End User's has a
   weak password to an "un-trustworthy" RP would not generally be
   considered a good idea.








































Recordon                                                       [Page 11]

                  OpenID Provider Auth Policy Extension        June 2007


7.  Examples

7.1.  Authentication Method Classifications

   This non-normative section illustrates classification of various
   common authentication methods and their respective conformance within
   the defined policies and levels.

7.1.1.  Authentication Policy Examples

    This table provides examples of common authentication technologies
        and their mapping to the Authentication Policies defined in
                                Section 4.

   +----------------+--------------------+--------------+--------------+
   | Method         | Phishing-Resistant | Multi-Factor | Physical     |
   |                |                    |              | Multi-Factor |
   +----------------+--------------------+--------------+--------------+
   | Password via   |                    |              |              |
   | HTTPS          |                    |              |              |
   |                |                    |              |              |
   | PIN and        | X                  | X            |              |
   | digital        |                    |              |              |
   | certificate    |                    |              |              |
   | via HTTPS      |                    |              |              |
   |                |                    |              |              |
   | PIN and "soft" | X                  | X            |              |
   | OTP token via  |                    |              |              |
   | HTTPS          |                    |              |              |
   |                |                    |              |              |
   | PIN and "hard" | X                  | X            | X            |
   | OTP token via  |                    |              |              |
   | HTTPS          |                    |              |              |
   |                |                    |              |              |
   | PIN and "hard" | X                  | X            | X            |
   | crypto token   |                    |              |              |
   | via HTTPS      |                    |              |              |
   +----------------+--------------------+--------------+--------------+

   [anchor14]

7.1.2.  NIST Assurance Levels

   This section is designed to highlight the majority of referenced
   information needed in the most commonly envisioned OpenID Provider
   deployments.  All normative and authoritative text can be found in
   [NIST_SP800-63].




Recordon                                                       [Page 12]

                  OpenID Provider Auth Policy Extension        June 2007


        This table is republished from page 39 of [NIST_SP800-63].

   +--------------------------+---------+---------+---------+---------+
   | Token Type               | Level 1 | Level 2 | Level 3 | Level 4 |
   +--------------------------+---------+---------+---------+---------+
   | Hard crypto token        | X       | X       | X       | X       |
   |                          |         |         |         |         |
   | One-time password device | X       | X       | X       |         |
   |                          |         |         |         |         |
   | Soft crypto token        | X       | X       | X       |         |
   |                          |         |         |         |         |
   | Passwords & PINs         | X       | X       |         |         |
   +--------------------------+---------+---------+---------+---------+

        This table is republished from page 39 of [NIST_SP800-63].

    +------------------------+---------+---------+---------+---------+
    | Protect Against        | Level 1 | Level 2 | Level 3 | Level 4 |
    +------------------------+---------+---------+---------+---------+
    | On-line guessing       | X       | X       | X       | X       |
    |                        |         |         |         |         |
    | Replay                 | X       | X       | X       | X       |
    |                        |         |         |         |         |
    | Eavesdropper           |         | X       | X       | X       |
    |                        |         |         |         |         |
    | Verifier impersonation |         |         | X       | X       |
    |                        |         |         |         |         |
    | Man-in-the-middle      |         |         | X       | X       |
    |                        |         |         |         |         |
    | Session hijacking      |         |         |         | X       |
    +------------------------+---------+---------+---------+---------+

       The following table illustrates the minimum number of factors
                     required at each assurance level.

                            +-------+---------+
                            | Level | Factors |
                            +-------+---------+
                            | 1     | 1       |
                            |       |         |
                            | 2     | 1       |
                            |       |         |
                            | 3     | 2       |
                            |       |         |
                            | 4     | 2       |
                            +-------+---------+

   In all cases, implementing a commonly accepted nonce and cross-site



Recordon                                                       [Page 13]

                  OpenID Provider Auth Policy Extension        June 2007


   scripting protection when entering authentication credentials is
   required to satisfy all four Assurance Levels.  All examples below
   assume this requirement is met.

   It should be noted that NIST Assurance Levels 1 and 2 have differing
   password entropy requirements.  When working with passwords, you
   should refer to the [NIST_SP800-63] specification for more details.
   All examples below assume the password meets these requirements.

    This table provides examples of common authentication technologies
     and their mapping to NIST Assurance Levels, please be aware that
   there are details not represented in these examples that may bear on
                      the resulting Assurance Level.

   +-------------+--------------------+-------+-------+----------------+
   | Method      | Level 1            | Level | Level | Level 4        |
   |             |                    | 2     | 3     |                |
   +-------------+--------------------+-------+-------+----------------+
   | Password    | Yes, if            |       |       |                |
   | via HTTP    | challenge-response |       |       |                |
   |             |                    |       |       |                |
   | Password    | Yes                | Yes   |       |                |
   | via HTTPS   |                    |       |       |                |
   |             |                    |       |       |                |
   | PIN and     | Yes                | Yes   | Yes   |                |
   | Digital     |                    |       |       |                |
   | Certificate |                    |       |       |                |
   | via HTTPS   |                    |       |       |                |
   |             |                    |       |       |                |
   | PIN and     | Yes                | Yes   | Yes   |                |
   | "soft" OTP  |                    |       |       |                |
   | token via   |                    |       |       |                |
   | HTTPS       |                    |       |       |                |
   |             |                    |       |       |                |
   | PIN and     | Yes                | Yes   | Yes   |                |
   | "hard" OTP  |                    |       |       |                |
   | token via   |                    |       |       |                |
   | HTTPS       |                    |       |       |                |
   |             |                    |       |       |                |
   | PIN and     | Yes                | Yes   | Yes   | Yes, if FIPS   |
   | "hard"      |                    |       |       | 140-2 Level 2  |
   | crypto      |                    |       |       | crypto and     |
   | token via   |                    |       |       | Level 3        |
   | HTTPS       |                    |       |       | physical       |
   +-------------+--------------------+-------+-------+----------------+






Recordon                                                       [Page 14]

                  OpenID Provider Auth Policy Extension        June 2007


8.  Acknowledgements

   I'd like to thank Ben Laurie, Dick Hardt, Drummond Reed, George
   Fletcher, Kim Cameron, and Mike Jones for their feedback when
   drafting this specification.














































Recordon                                                       [Page 15]

                  OpenID Provider Auth Policy Extension        June 2007


9.  Normative References

   [NIST_SP800-63]
              Burr, W., Dodson, D., and W. Polk, Ed., "Electronic
              Authentication Guideline", April 2006.

   [OpenIDAuthentication2.0]
              specs@openid.net, "OpenID Authentication 2.0 - Draft 11",
              2007.

   [RFC2119]  Bradner, B., "Key words for use in RFCs to Indicate
              Requirement Levels", RFC 2119, 1997.

   [Yadis]    Miller, J., Ed., "Yadis Specification 1.0", 2005.





































Recordon                                                       [Page 16]

                  OpenID Provider Auth Policy Extension        June 2007


Editorial Comments

   [anchor6]   There is ongoing discussion as to if a policy should be
               defined to represent technologies which help prevent
               phishing attacks though do not fit the phishing-resistant
               definition. Examples would be site seal technology,
               browser plugins specific to OpenID flows, and Internet
               Explorer 7's support for Extended Validation SSL
               certificates.

   [anchor7]   There is ongoing discussion as to the best wording for
               this definition. The main spirit of this definition is
               that a user does not authenticate to the OP by providing
               a password by itself directly from within the User-Agent.

   [anchor14]  Where does technology such as Vidoop or Passfaces fit
               into this table?


































Recordon                                                       [Page 17]

                  OpenID Provider Auth Policy Extension        June 2007


Author's Address

   David Recordon
   VeriSign, Inc.
   487 E Middlefield Road
   Mountain View, CA  94043
   USA

   Email: drecordon@verisign.com










































Recordon                                                       [Page 18]


