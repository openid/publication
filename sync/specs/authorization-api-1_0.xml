<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.29 (Ruby 3.1.7) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>


<rfc ipr="none" docName="authorization-api-1_0" category="std" consensus="true" submissionType="IETF" xml:lang="en">
  <front>
    <title abbrev="azapi">Authorization API 1.0 â€“ draft 04</title>

    <author initials="O." surname="Gazitt" fullname="Omri Gazitt" role="editor">
      <organization>Aserto</organization>
      <address>
        <email>ogazitt@gmail.com</email>
      </address>
    </author>
    <author initials="D." surname="Brossard" fullname="David Brossard" role="editor">
      <organization>Axiomatics</organization>
      <address>
        <email>david.brossard@axiomatics.com</email>
      </address>
    </author>
    <author initials="A." surname="Tulshibagwale" fullname="Atul Tulshibagwale" role="editor">
      <organization>SGNL</organization>
      <address>
        <email>atul@sgnl.ai</email>
      </address>
    </author>

    <date year="2025" month="October" day="06"/>

    
    <workgroup>OpenID AuthZEN</workgroup>
    <keyword>Authorization</keyword> <keyword>Access Management</keyword> <keyword>XACML</keyword> <keyword>OPA</keyword> <keyword>Topaz</keyword> <keyword>Cedar</keyword> <keyword>PDP</keyword> <keyword>PEP</keyword> <keyword>ALFA</keyword>

    <abstract>


<?line 92?>

<t>The Authorization API enables Policy Decision Points (PDPs) and Policy Enforcement Points (PEPs) to communicate authorization requests and decisions to each other without requiring knowledge of each other's inner workings. The Authorization API is served by the PDP and is called by the PEP. The Authorization API includes evaluation endpoints, which provide specific access decisions, and search endpoints for discovering permissible subjects, resources, or actions.</t>



    </abstract>



  </front>

  <middle>


<?line 96?>

<section anchor="introduction"><name>Introduction</name>
<t>Computational services often implement access control within their components by separating Policy Decision Points (PDPs) from Policy Enforcement Points (PEPs). PDPs and PEPs are defined in XACML (<xref target="XACML"/>) and NIST's ABAC SP 800-162 (<xref target="NIST.SP.800-162"/>). Communication between PDPs and PEPs follows similar patterns across different software and services that require or provide authorization information. The Authorization API described in this document enables different providers to offer PDP and PEP capabilities without having to bind themselves to one particular implementation of a PDP or PEP.</t>

</section>
<section anchor="model"><name>Model</name>
<t>By convention, we refer to a service that implements this API as a Policy Decision Point, or PDP. The policy language, architecture, and state management aspects of a PDP are beyond the scope of this specification.</t>

<t>By convention, we refer to a client of the Authorization API as a Policy Enforcement Point, or PEP. Clients may consume the Authorization API for use cases that go beyond enforcement of authorization decisions; for example, the Resource Search API (<xref target="resource-search-api"/>) allows a caller to discover the resources on which a subject can perform an action. For consistency, we use the term PEP to describe a client of the API, regardless of the use case.</t>

<t>The Authorization API is defined in a transport-agnostic manner. A normative HTTPS binding is described in Transport (<xref target="transport"/>). Other bindings, such as gRPC, may be defined in other profiles of this specification.</t>

<t>Authentication for the Authorization API itself is out of scope for this document, since authentication for APIs is well-documented elsewhere. Support for OAuth 2.0 (<xref target="RFC6749"/>) is RECOMMENDED.</t>

</section>
<section anchor="features"><name>Features</name>
<t>The core feature of the Authorization API is the Access Evaluation API (<xref target="access-evaluation-api"/>), which enables a PEP to determine whether a specific request can be permitted to access a specific resource. The following are non-normative examples:</t>

<t><list style="symbols">
  <t>Can Alice view document #123?</t>
  <t>Can Alice view document #123 at 16:30 on Tuesday, June 11, 2024?</t>
  <t>Can a manager print?</t>
</list></t>

<t>The Access Evaluations API (<xref target="access-evaluations-api"/>) enables execution of multiple evaluations in a single request. The following are non-normative examples:</t>

<t><list style="symbols">
  <t>Can Alice view documents 123, 234 and 345 on Tuesday, June 11, 2024?</t>
  <t>Can document 123 be viewed by Alice and Bob?</t>
</list></t>

<t>The Search APIs (<xref target="search"/>) provide lists of resources, subjects or actions that would be allowed access. The following are non-normative examples:</t>

<t><list style="symbols">
  <t>Which documents can Alice view?</t>
  <t>Who can view document 123?</t>
  <t>What actions can Alice perform on document 123 on Tuesday, June 11, 2024?</t>
</list></t>

</section>
<section anchor="api-version"><name>API Version</name>
<t>This document describes the API version 1.0. Any updates to this API through subsequent revisions of this document or other documents MAY augment this API, but MUST NOT modify the API described here. Augmentation MAY include additional API methods or additional parameters to existing API methods, additional authorization mechanisms, or additional optional headers in HTTPS transport bindings. Endpoints for version 1.0 SHOULD include <spanx style="verb">v1</spanx> in the endpoint identifier (e.g. <spanx style="verb">https://pdp.example.com/access/v1/</spanx>).</t>

</section>
<section anchor="information-model"><name>Information Model</name>
<t>The information model for requests and responses include the following entities: Subject, Action, Resource, Context, and Decision. These are all defined below.</t>

<section anchor="subject"><name>Subject</name>
<t>A Subject is the user or machine principal about whom the Authorization API is being invoked. The Subject may be requesting access at the time the Authorization API is invoked.</t>

<t>A Subject is an object that contains two REQUIRED keys, <spanx style="verb">type</spanx> and <spanx style="verb">id</spanx>, which have a string value, and an OPTIONAL key, <spanx style="verb">properties</spanx>, with a value of an object.</t>

<dl>
  <dt><spanx style="verb">type</spanx>:</dt>
  <dd>
    <t>REQUIRED. A string value that specifies the type of the Subject.</t>
  </dd>
  <dt><spanx style="verb">id</spanx>:</dt>
  <dd>
    <t>REQUIRED. A string value containing the unique identifier of the Subject, scoped to the <spanx style="verb">type</spanx>.</t>
  </dd>
  <dt><spanx style="verb">properties</spanx>:</dt>
  <dd>
    <t>OPTIONAL. An object which can be used to express additional attributes of a Subject.</t>
  </dd>
</dl>

<section anchor="subject-properties"><name>Subject Properties</name>
<t>Many authorization systems are stateless, and expect the PEP to pass in all relevant attributes used in the evaluation of the authorization policy. To satisfy this requirement, Subjects MAY include additional attributes as key-value pairs, under the <spanx style="verb">properties</spanx> object. A property can contain both simple values, such as strings, numbers, booleans and nulls, and complex values, such as arrays and objects.</t>

<t>Examples of subject attributes can include, but are not limited to:</t>

<t><list style="symbols">
  <t>department,</t>
  <t>group memberships,</t>
  <t>device identifier,</t>
  <t>IP address.</t>
</list></t>

</section>
<section anchor="subject-examples"><name>Examples (non-normative)</name>

<t>The following is a non-normative example of a minimal Subject:</t>

<figure title="Example Subject" anchor="subject-example"><sourcecode type="json"><![CDATA[
{
  "type": "user",
  "id": "alice@example.com"
}
]]></sourcecode></figure>

<t>The following is a non-normative example of a Subject which adds a string-valued <spanx style="verb">department</spanx> property:</t>

<figure title="Example Subject with Additional Property" anchor="subject-department-example"><sourcecode type="json"><![CDATA[
{
  "type": "user",
  "id": "alice@example.com",
  "properties": {
    "department": "Sales"
  }
}
]]></sourcecode></figure>

<t>The following is a non-normative example of a subject which adds IP address and device identifier properties:</t>

<figure title="Example Subject with IP Address and Device ID" anchor="subject-device-id-example"><sourcecode type="json"><![CDATA[
{
  "type": "user",
  "id": "alice@example.com",
  "properties": {
    "ip_address": "172.217.22.14",
    "device_id": "8:65:ee:17:7e:0b"
  }
}
]]></sourcecode></figure>

</section>
</section>
<section anchor="resource"><name>Resource</name>
<t>A Resource is the target of an access request. It is an object that is constructed similar to a Subject entity. It has the following keys:</t>

<dl>
  <dt><spanx style="verb">type</spanx>:</dt>
  <dd>
    <t>REQUIRED. A string value that specifies the type of the Resource.</t>
  </dd>
  <dt><spanx style="verb">id</spanx>:</dt>
  <dd>
    <t>REQUIRED. A string value containing the unique identifier of the Resource, scoped to the <spanx style="verb">type</spanx>.</t>
  </dd>
  <dt><spanx style="verb">properties</spanx>:</dt>
  <dd>
    <t>OPTIONAL. An object which can be used to express additional attributes of a Resource.</t>
  </dd>
</dl>

<section anchor="resource-properties"><name>Resource Properties</name>

<t>Similarly to the Subject properties, the PEP can also provide attributes for the Resource in the properties field.</t>

<t>Such attributes can include, but are not limited to, attributes of the resource used in access evaluations or metadata about the resource.</t>

</section>
<section anchor="resource-examples"><name>Examples (non-normative)</name>

<t>The following is a non-normative example of a Resource with a <spanx style="verb">type</spanx> and a simple <spanx style="verb">id</spanx>:</t>

<figure title="Example Resource" anchor="resource-example"><sourcecode type="json"><![CDATA[
{
  "type": "book",
  "id": "123"
}
]]></sourcecode></figure>

<t>The following is a non-normative example of a Resource containing a <spanx style="verb">library_record</spanx> property, that is itself an object:</t>

<figure title="Example Resource with Additional Property" anchor="resource-example-structured"><sourcecode type="json"><![CDATA[
{
  "type": "book",
  "id": "123",
  "properties": {
    "library_record":{
      "title": "AuthZEN in Action",
      "isbn": "978-0593383322"
    }
  }
}
]]></sourcecode></figure>

</section>
</section>
<section anchor="action"><name>Action</name>
<t>An Action is the type of access that the requester intends to perform.</t>

<t>Action is an object that contains a REQUIRED <spanx style="verb">name</spanx> key with a string value, and an OPTIONAL <spanx style="verb">properties</spanx> key with an object value.</t>

<dl>
  <dt><spanx style="verb">name</spanx>:</dt>
  <dd>
    <t>REQUIRED. A string value containing the name of the Action.</t>
  </dd>
  <dt><spanx style="verb">properties</spanx>:</dt>
  <dd>
    <t>OPTIONAL. An object which can be used to express additional attributes of an Action.</t>
  </dd>
</dl>

<section anchor="action-properties"><name>Action Properties</name>

<t>Similarly to the Subject and Resource properties, the PEP can also provide attributes for the Action in the properties field.</t>

<t>Such attributes can include, but are not limited to, parameters of the action that is being requested.</t>

</section>
<section anchor="action-examples"><name>Examples (non-normative)</name>

<t>The following is a non-normative example of an action:</t>

<figure title="Example Action" anchor="action-example"><sourcecode type="json"><![CDATA[
{
  "name": "can_read"
}
]]></sourcecode></figure>

<t>The following is a non-normative example of an action with additional properties:</t>

<figure title="Example Action with properties for extending a book loan." anchor="action-extend-loan-example"><sourcecode type="json"><![CDATA[
{
  "name": "extend-loan",
  "properties": {
    "period": "2W"
  }
}
]]></sourcecode></figure>

</section>
</section>
<section anchor="context"><name>Context</name>
<t>The Context represents the environment of the access evaluation request.</t>

<t>Context is an object which can be used to express attributes of the environment.</t>

<t>Examples of context attributes can include, but are not limited to:</t>

<t><list style="symbols">
  <t>The time of day,</t>
  <t>Location from which the request was received,</t>
  <t>Capabilities of the PEP,</t>
  <t>JSON Schema or JSON-LD definitions for the request.</t>
</list></t>

<section anchor="context-examples"><name>Examples (non-normative)</name>

<t>The following is a non-normative example of a Context:</t>

<figure title="Example Context" anchor="context-example"><sourcecode type="json"><![CDATA[
{
  "time": "1985-10-26T01:22-07:00"
}
]]></sourcecode></figure>

<t>The following example of a Context provides a JSON Schema definition which can be used to parse and validate the AuthZEN request:</t>

<figure title="Example Context with a reference to a JSON schema" anchor="context-schema-example"><sourcecode type="json"><![CDATA[
{
  "time": "1985-10-26T01:22-07:00",
  "schema": "https://schema.example.com/access-request.schema.json"
}
]]></sourcecode></figure>

</section>
</section>
<section anchor="decision"><name>Decision</name>
<t>A Decision is the result of the evaluation of an access request. It provides the information required for the PEP to enforce the decision.</t>

<t>Decision is an object that contains a REQUIRED <spanx style="verb">decision</spanx> key with a <spanx style="verb">boolean</spanx> value, and an OPTIONAL <spanx style="verb">context</spanx> key with an object value.</t>

<dl>
  <dt><spanx style="verb">decision</spanx>:</dt>
  <dd>
    <t>REQUIRED. A boolean value that specifies whether the Decision is to allow or deny the operation.</t>
  </dd>
  <dt><spanx style="verb">context</spanx>:</dt>
  <dd>
    <t>OPTIONAL. An object which can convey additional information that can be used by the PEP as part of the decision enforcement process.</t>
  </dd>
</dl>

<t>In this specification, assuming the evaluation was successful, there are only two possible values for the <spanx style="verb">decision</spanx>:</t>

<t><list style="symbols">
  <t><spanx style="verb">true</spanx>: The access request is permitted to go forward. If the PEP does not understand information in the <spanx style="verb">context</spanx> response object, the PEP MAY choose to reject the decision.</t>
  <t><spanx style="verb">false</spanx>: The access request is denied and MUST NOT be permitted to go forward.</t>
</list></t>

<t>The following is a non-normative example of a minimal Decision:</t>

<figure title="Example Decision" anchor="decision-example"><sourcecode type="json"><![CDATA[
{
  "decision": true
}
]]></sourcecode></figure>

<section anchor="decision-context"><name>Decision Context</name>
<t>In addition to a <spanx style="verb">decision</spanx>, a response MAY contain a <spanx style="verb">context</spanx> field which contains an object. This context can convey additional information that can be used by the PEP as part of the decision enforcement process.</t>

<t>Examples include, but are not limited to:</t>

<t><list style="symbols">
  <t>Reason(s) a decision was made,</t>
  <t>"Advices" and/or "Obligations" tied to the access decision,</t>
  <t>Hints for rendering UI state,</t>
  <t>Instructions for step-up authentication,</t>
  <t>Environmental information,</t>
  <t>etc.</t>
</list></t>

</section>
<section anchor="decision-examples"><name>Examples (non-normative)</name>
<t>The following are all non-normative examples of possible and valid contexts, provided to illustrate possible usages. The actual semantics and format of the <spanx style="verb">context</spanx> object are an implementation concern and outside the scope of this specification. For example, implementations MAY use keys that correspond to concepts from other standards, such as HTTP status codes, to convey common reasons in an interoperable manner.</t>

<section anchor="non-normative-example-1-conveying-decision-reasons"><name>Non-normative Example 1: conveying decision Reasons</name>
<t>The PDP may provide reasons to explain a decision. In the non-normative example below, an implementation might convey different reasons to administrators and end-users, using keys that could correspond to HTTP status codes:</t>

<figure title="Non-normative Example Response with reason Context" anchor="response-with-reason-context-example"><sourcecode type="json"><![CDATA[
{
  "decision": false,
  "context": {
    "reason_admin": {
      "403": "Request failed policy C076E82F"
    },
    "reason_user": {
      "403": "Insufficient privileges. Contact your administrator"
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="non-normative-example-2-conveying-metadata-and-environmental-elements"><name>Non-normative Example 2: conveying metadata and environmental elements</name>
<t>In the following non-normative example, the PDP justifies its decision by including environmental conditions that did not meet its policies. Metadata pertaining to the decision response times is also provided:</t>

<figure title="Non-normative Example Response with Environment and Metadata Context" anchor="response-with-environment-context-example"><sourcecode type="json"><![CDATA[
{
  "decision": false,
  "context": {
    "metadata": {
      "response-time": 60,
      "response-time-unit": "ms"
    },
    "environment": {
      "ip": "10.10.0.1",
      "datetime": "2025-06-27T18:03:07Z",
      "os": "ubuntu24.04.2LTS-AMDx64"
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="non-normative-example-3-requesting-step-up-authentication"><name>Non-normative Example 3: requesting step-up authentication</name>
<t>In the following non-normative example, the PDP requests a step-up authentication of the requesting subject, by signalling the required <spanx style="verb">acr</spanx> and <spanx style="verb">amr</spanx> access token claim values it expects to see in order to approve the request:</t>

<figure title="Non-normative Example Response with a step-up request Context" anchor="response-with-step-up-example"><sourcecode type="json"><![CDATA[
{
  "decision": false,
  "context": {
    "acr_values": "urn:com:example:loa:3",
    "amr_values": "mfa hwk"
  }
}
]]></sourcecode></figure>

</section>
</section>
</section>
</section>
<section anchor="access-evaluation-api"><name>Access Evaluation API</name>

<t>The Access Evaluation API defines the message exchange pattern between a PEP and a PDP for executing a single access evaluation.</t>

<section anchor="access-evaluation-request"><name>The Access Evaluation API Request</name>
<t>The Access Evaluation request is an object consisting of four entities previously defined in the Information Model (<xref target="information-model"/>):</t>

<dl>
  <dt><spanx style="verb">subject</spanx>:</dt>
  <dd>
    <t>REQUIRED. The subject (or principal) of type Subject</t>
  </dd>
  <dt><spanx style="verb">action</spanx>:</dt>
  <dd>
    <t>REQUIRED. The action (or verb) of type Action.</t>
  </dd>
  <dt><spanx style="verb">resource</spanx>:</dt>
  <dd>
    <t>REQUIRED. The resource of type Resource.</t>
  </dd>
  <dt><spanx style="verb">context</spanx>:</dt>
  <dd>
    <t>OPTIONAL. The context (or environment) of type Context.</t>
  </dd>
</dl>

<section anchor="example-non-normative"><name>Example (non-normative)</name>

<figure title="Example Request" anchor="request-example"><sourcecode type="json"><![CDATA[
{
  "subject": {
    "type": "user",
    "id": "alice@example.com"
  },
  "resource": {
    "type": "account",
    "id": "123"
  },
  "action": {
    "name": "can_read",
    "properties": {
      "method": "GET"
    }
  },
  "context": {
    "time": "1985-10-26T01:22-07:00"
  }
}
]]></sourcecode></figure>

</section>
</section>
<section anchor="access-evaluation-response"><name>The Access Evaluation API Response</name>

<t>The response of the Access Evaluation API consists of the Decision entity as defined in the Information Model (<xref target="information-model"/>).</t>

</section>
</section>
<section anchor="access-evaluations-api"><name>Access Evaluations API</name>

<t>The Access Evaluations API defines the message exchange pattern between a PEP and a PDP for evaluating multiple access evaluations within the scope of a single message exchange (also known as "boxcarring" requests).</t>

<section anchor="access-evaluations-request"><name>The Access Evaluations API Request</name>

<t>The Access Evaluation API Request builds on the information model presented in <xref target="information-model"/> and the object defined in the Access Evaluation Request (<xref target="access-evaluation-request"/>).</t>

<t>To send multiple access evaluation requests in a single message, the PEP MAY add an <spanx style="verb">evaluations</spanx> key to the request. The <spanx style="verb">evaluations</spanx> key is an array which contains a list of objects, each typed as the object as defined in the Access Evaluation Request (<xref target="access-evaluation-request"/>), and specifying a discrete request.</t>

<t>If an <spanx style="verb">evaluations</spanx> array is NOT present or is empty, the Access Evaluations Request behaves in a backwards-compatible manner with the (single) Access Evaluation API Request (<xref target="access-evaluation-request"/>).</t>

<t>If an <spanx style="verb">evaluations</spanx> array IS present and contains one or more objects, these form distinct requests that the PDP will evaluate. These requests are independent from each other, and may be executed sequentially or in parallel, left to the discretion of each implementation.</t>

<t>The top-level <spanx style="verb">subject</spanx>, <spanx style="verb">action</spanx>, <spanx style="verb">resource</spanx>, and <spanx style="verb">context</spanx> keys provide default values for their respective fields in the <spanx style="verb">evaluations</spanx> array.  The top-level <spanx style="verb">subject</spanx>, <spanx style="verb">action</spanx> and <spanx style="verb">resource</spanx> keys MAY be omitted if the <spanx style="verb">evaluations</spanx> array is present, contains one or more objects, and every object in the <spanx style="verb">evaluations</spanx> array contains the respective top-level key. This behavior is described in <xref target="default-values"/>.</t>

<t>The following is a non-normative example for specifying three requests, with no default values:</t>

<figure><sourcecode type="json"><![CDATA[
{
  "evaluations": [
    {
      "subject": {
        "type": "user",
        "id": "alice@example.com"
      },
      "action": {
        "name": "can_read"
      },
      "resource": {
        "type": "document",
        "id": "boxcarring.md"
      },
      "context": {
        "time": "2024-05-31T15:22-07:00"
      }
    },
    {
      "subject": {
        "type": "user",
        "id": "alice@example.com"
      },
      "action": {
        "name": "can_read"
      },
      "resource": {
        "type": "document",
        "id": "subject-search.md"
      },
      "context": {
        "time": "2024-05-31T15:22-07:00"
      }
    },
    {
      "subject": {
        "type": "user",
        "id": "alice@example.com"
      },
      "action": {
        "name": "can_read"
      },
      "resource": {
        "type": "document",
        "id": "resource-search.md"
      },
      "context": {
        "time": "2024-05-31T15:22-07:00"
      }
    }
  ]
}
]]></sourcecode></figure>

<section anchor="default-values"><name>Default values</name>

<t>While the example above provides the most flexibility in specifying distinct values in each request for every evaluation, it is common for boxcarred requests to share one or more values of the evaluation request. For example, evaluations MAY all refer to a single subject, and/or have the same contextual (environmental) attributes.</t>

<t>Default values offer a more compact syntax that avoids unnecessary duplication of request data.</t>

<t>The top-level <spanx style="verb">subject</spanx>, <spanx style="verb">action</spanx>, <spanx style="verb">resource</spanx>, and <spanx style="verb">context</spanx> keys provide default values for each object in the evaluations array. Any of these keys specified within an individual evaluation object overrides the corresponding top-level default. Because <spanx style="verb">subject</spanx>, <spanx style="verb">action</spanx>, and <spanx style="verb">resource</spanx> are required for a valid evaluation, any of these keys omitted from an evaluation object MUST be provided as a top-level key.</t>

<t>The following is a non-normative example for specifying three requests that refer to a single subject and context:</t>

<figure><sourcecode type="json"><![CDATA[
{
  "subject": {
    "type": "user",
    "id": "alice@example.com"
  },
  "context": {
    "time": "2024-05-31T15:22-07:00"
  },
  "evaluations": [
    {
      "action": {
        "name": "can_read"
      },
      "resource": {
        "type": "document",
        "id": "boxcarring.md"
      }
    },
    {
      "action": {
        "name": "can_read"
      },
      "resource": {
        "type": "document",
        "id": "subject-search.md"
      }
    },
    {
      "action": {
        "name": "can_read"
      },
      "resource": {
        "type": "document",
        "id": "resource-search.md"
      }
    }
  ]
}
]]></sourcecode></figure>

<t>The following is a non-normative example for specifying three requests that refer to a single <spanx style="verb">subject</spanx> and <spanx style="verb">context</spanx>, with a default value for <spanx style="verb">action</spanx>, that is overridden by the third request:</t>

<figure><sourcecode type="json"><![CDATA[
{
  "subject": {
    "type": "user",
    "id": "alice@example.com"
  },
  "context": {
    "time": "2024-05-31T15:22-07:00"
  },
  "action": {
    "name": "can_read"
  },
  "evaluations": [
    {
      "resource": {
        "type": "document",
        "id": "boxcarring.md"
      }
    },
    {
      "resource": {
        "type": "document",
        "id": "subject-search.md"
      }
    },
    {
      "action": {
        "name": "can_edit"
      },
      "resource": {
        "type": "document",
        "id": "resource-search.md"
      }
    }
  ]
}
]]></sourcecode></figure>

</section>
<section anchor="evaluations-options"><name>Evaluations options</name>

<t>The <spanx style="verb">evaluations</spanx> request payload includes an OPTIONAL <spanx style="verb">options</spanx> key, with a value that is an object.</t>

<t>This provides a general-purpose mechanism for providing PEP-supplied metadata on how the request is to be executed.</t>

<t>One such option controls <em>evaluation semantics</em>, and is described in <xref target="evaluations-semantics"/>.</t>

<t>A non-normative example of the <spanx style="verb">options</spanx> field is shown below, following an <spanx style="verb">evaluations</spanx> array provided for the sake of completeness:</t>

<figure><sourcecode type="json"><![CDATA[
{
  "evaluations": [{
    "resource": {
      "type": "doc",
      "id": "1"
    },
    "subject": {
      "type": "doc",
      "id": "2"
    }
  }],
  "options": {
    "evaluations_semantic": "execute_all",
    "another_option": "value"
  }
}
]]></sourcecode></figure>

<section anchor="evaluations-semantics"><name>Evaluations semantics</name>

<t>By default, every request in the <spanx style="verb">evaluations</spanx> array is executed and a response returned in the same array order. This is the most common use-case for boxcarring multiple evaluation requests in a single payload.</t>

<t>This specification supports three evaluation semantics:</t>

<t><list style="numbers" type="1">
  <t><em>Execute all of the requests (potentially in parallel), return all of the results.</em> Any failure can be denoted by <spanx style="verb">"decision": false</spanx> and MAY provide a reason code in the context.</t>
  <t><em>Deny on first denial (or failure).</em> This semantic could be desired if a PEP wants to issue a few requests in a particular order, with any denial (error, or <spanx style="verb">"decision": false</spanx>) "short-circuiting" the evaluations call and returning on the first denial. This essentially works like the <spanx style="verb">&amp;&amp;</spanx> operator in programming languages.</t>
  <t><em>Permit on first permit.</em> This is the converse "short-circuiting" semantic, working like the <spanx style="verb">||</spanx> operator in programming languages.</t>
</list></t>

<t>To select the desired evaluation semantic, a PEP can pass in <spanx style="verb">options.evaluations_semantic</spanx> with exactly one of the following values:</t>

<t><list style="symbols">
  <t><spanx style="verb">execute_all</spanx></t>
  <t><spanx style="verb">deny_on_first_deny</spanx></t>
  <t><spanx style="verb">permit_on_first_permit</spanx></t>
</list></t>

<t><spanx style="verb">execute_all</spanx> is the default semantic, so an <spanx style="verb">evaluations</spanx> request without the <spanx style="verb">options.evaluations_semantic</spanx> flag will execute using this semantic.</t>

<section anchor="example-evaluate-read-action-for-three-documents-using-all-three-semantics"><name>Example: Evaluate <spanx style="verb">read</spanx> action for three documents using all three semantics</name>

<t>Execute all requests:</t>

<figure><sourcecode type="json"><![CDATA[
{
  "subject": {
    "type": "user",
    "id": "alice@example.com"
  },
  "action": {
    "name": "read"
  },
  "options": {
    "evaluations_semantic": "execute_all"
  },
  "evaluations": [
    {
      "resource": {
        "type": "document",
        "id": "1"
      }
    },
    {
      "resource": {
        "type": "document",
        "id": "2"
      }
    },
    {
      "resource": {
        "type": "document",
        "id": "3"
      }
    }
  ]
}
]]></sourcecode></figure>

<t>Response:</t>

<figure><sourcecode type="json"><![CDATA[
{
  "evaluations": [
    {
      "decision": true
    },
    {
      "decision": false
    },
    {
      "decision": true
    }
  ]
}
]]></sourcecode></figure>

<t>Deny on first deny:</t>

<figure><sourcecode type="json"><![CDATA[
{
  "subject": {
    "type": "user",
    "id": "alice@example.com"
  },
  "action": {
    "name": "read"
  },
  "options": {
    "evaluations_semantic": "deny_on_first_deny"
  },
  "evaluations": [
    {
      "resource": {
        "type": "document",
        "id": "1"
      }
    },
    {
      "resource": {
        "type": "document",
        "id": "2"
      }
    },
    {
      "resource": {
        "type": "document",
        "id": "3"
      }
    }
  ]
}
]]></sourcecode></figure>

<t>Response:</t>

<figure><sourcecode type="json"><![CDATA[
{
  "evaluations": [
    {
      "decision": true
    },
    {
      "decision": false,
      "context": {
        "code": "200",
        "reason": "deny_on_first_deny"
      }
    }
  ]
}
]]></sourcecode></figure>

<t>Permit on first permit:</t>

<figure><sourcecode type="json"><![CDATA[
{
  "subject": {
    "type": "user",
    "id": "alice@example.com"
  },
  "action": {
    "name": "read"
  },
  "options": {
    "evaluations_semantic": "permit_on_first_permit"
  },
  "evaluations": [
    {
      "resource": {
        "type": "document",
        "id": "1"
      }
    },
    {
      "resource": {
        "type": "document",
        "id": "2"
      }
    },
    {
      "resource": {
        "type": "document",
        "id": "3"
      }
    }
  ]
}
]]></sourcecode></figure>

<t>Response:</t>

<figure><sourcecode type="json"><![CDATA[
{
  "evaluations": [
    {
      "decision": true
    }
  ]
}
]]></sourcecode></figure>

</section>
</section>
</section>
</section>
<section anchor="access-evaluations-response"><name>The Access Evaluations API Response</name>

<t>Like the request format, the Access Evaluations Response format for an Access Evaluations Request adds an <spanx style="verb">evaluations</spanx> array that lists the decisions in the same order they were provided in the <spanx style="verb">evaluations</spanx> array in the request. Each value of the evaluations array is typed as a Decision as defined in the Information Model (<xref target="information-model"/>).</t>

<t>In case the <spanx style="verb">evaluations</spanx> array is present, it is RECOMMENDED that the <spanx style="verb">decision</spanx> key of the response be omitted. If present, it can be ignored by the PEP.</t>

<t>The following is a non-normative example of a Access Evaluations Response to an Access Evaluations Request containing three evaluation objects:</t>

<figure><sourcecode type="json"><![CDATA[
{
  "evaluations": [
    {
      "decision": true
    },
    {
      "decision": false,
      "context": {
        "reason": "resource not found"
      }
    },
    {
      "decision": false,
      "context": {
        "reason": "Subject is a viewer of the resource"
      }
    }
  ]
}
]]></sourcecode></figure>

<section anchor="errors"><name>Errors</name>

<t>There are two types of errors, and they are handled differently:
1. Transport-level errors, or errors that pertain to the entire payload.
2. Errors in individual evaluations.</t>

<t>The first type of error is handled at the transport level. For example, for the HTTP binding, the 4XX and 5XX codes indicate a general error that pertains to the entire payload, as described in Transport (<xref target="transport"/>).</t>

<t>The second type of error is handled at the payload level. Decisions default to <em>closed</em> (i.e. <spanx style="verb">false</spanx>), but the <spanx style="verb">context</spanx> field can include errors that are specific to that request.</t>

<t>The following is a non-normative example of a response to an Access Evaluations Request containing three evaluation objects, two of them demonstrating how errors can be returned for two of the evaluation requests:</t>

<figure><sourcecode type="json"><![CDATA[
{
  "evaluations": [
    {
      "decision": true
    },
    {
      "decision": false,
      "context": {
        "error": {
          "status": 404,
          "message": "Resource not found"
        }
      }
    },
    {
      "decision": false,
      "context": {
        "reason": "Subject is a viewer of the resource"
      }
    }
  ]
}
]]></sourcecode></figure>

</section>
</section>
</section>
<section anchor="search"><name>Search APIs</name>

<t>The Search APIs enable a PEP to discover the set of subjects, resources, or actions that are permitted within a specific authorization context. Their purpose is to return a list of authorized entities, rather than verify a single access request.</t>

<t>To perform a search, the PEP provides the Subject, Resource, Action, and Context entities defined in the Information Model (<xref target="information-model"/>), but omits the unique identifier of the entity being queried. The PDP then responds with the set of authorized entities for the queried entity type which would be authorized according to the provided criteria.</t>

<section anchor="search-semantics"><name>Semantics</name>

<t>A search is designed to return entities that would correspond to a permitted decision. Therefore, any result from a Search API, when subsequently used in an Access Evaluation API call, SHOULD result in a <spanx style="verb">"decision": true</spanx> response. However, because the evaluation is implementation-specific and may depend on other variables (such as time), this outcome is not guaranteed.</t>

<t>In addition, it is RECOMMENDED that a search be performed transitively, traversing intermediate attributes and/or relationships. For example, if user U is a member of group G, and group G is designated as a viewer on a document D, then a search for all subjects of type user that can view document D will include user U.</t>

</section>
<section anchor="search-pagination"><name>Pagination</name>

<t>Search APIs can return large result sets. To manage this, a PDP MAY support pagination, allowing a PEP to navigate and retrieve subsets of the total result set.</t>

<t>Pagination does not guarantee an atomic snapshot of the result set. Consequently, if items are added or removed while paginating, results MAY be repeated or omitted between pages.</t>

<t>Pagination is based on the use of opaque tokens. A PEP makes an initial request for data by sending a query that does not contain a token. If the PDP determines that the result set contains too many results to fit in a single response, the PDP returns a partial result set and a token that the PEP can use to retrieve the next page of results.</t>

<t>A paginated response MUST be clearly identified by the inclusion of a <spanx style="verb">page</spanx> object containing a non-empty, opaque <spanx style="verb">next_token</spanx>. This token is the signal to the PEP that more results are available.</t>

<t>To retrieve the next page, the PEP sends a subsequent request containing a <spanx style="verb">page</spanx> object with the <spanx style="verb">token</spanx> field set to the <spanx style="verb">next_token</spanx> value from the previous response. This process is repeated until the PDP returns a <spanx style="verb">page</spanx> object in which the value of the <spanx style="verb">next_token</spanx> field is an empty string, signaling the end of the result set.</t>

<t>When a request contains a token, all entities (e.g., <spanx style="verb">subject</spanx>, <spanx style="verb">resource</spanx>, <spanx style="verb">action</spanx>, <spanx style="verb">context</spanx>) and pagination parameters (e.g., <spanx style="verb">limit</spanx>)  MUST be identical to the preceding request. PDPs SHOULD return an error when any entity or parameter has been changed.</t>

<t>PEPs that wish to sequentially iterate through the entire result set SHOULD use the core pagination mechanism described above, which is designed to work consistently across all PDPs that support the search APIs.</t>

<section anchor="search-pagination-request"><name>Paginated Requests</name>

<t>A Search API Request MAY include a <spanx style="verb">page</spanx> object indicating which subset of the larger result set the PEP would like to receive.</t>

<t>The <spanx style="verb">page</spanx> object in a Search API Request consists of the following keys:</t>

<dl>
  <dt><spanx style="verb">token</spanx>:</dt>
  <dd>
    <t>OPTIONAL. An opaque string value from the <spanx style="verb">next_token</spanx> of a previous response.</t>
  </dd>
  <dt><spanx style="verb">limit</spanx>:</dt>
  <dd>
    <t>OPTIONAL. A non-negative integer indicating the maximum number of results to return in the response.</t>
  </dd>
  <dt><spanx style="verb">properties</spanx>:</dt>
  <dd>
    <t>OPTIONAL. An object containing additional implementation-specific pagination request attributes, such as, but not limited to, sorting and filtering.</t>
  </dd>
</dl>

<t>Apart from the <spanx style="verb">token</spanx>, all values from the initial request MUST remain identical for subsequent pages. If a different value is provided mid-pagination the PDP SHOULD return an error.</t>

<t>Additional keys MAY be included in the <spanx style="verb">page</spanx> object. If they are, they MUST be defined in a specification referenced in the AuthZEN Policy Decision Point Capabilities Registry (<xref target="iana-pdp-capabilities-registry"/>). Furthermore, the PDP MUST declare support for the corresponding capability URN in its <spanx style="verb">supported_capabilities</spanx> metadata (<xref target="pdp-metadata-data-capabilities"/>).</t>

</section>
<section anchor="search-pagination-response"><name>Paginated Responses</name>

<t>Any Search API Response MAY include a <spanx style="verb">page</spanx> object, but if a response does not contain the entire result set, it MUST include this object.</t>

<t>The <spanx style="verb">page</spanx> object contains the following keys:</t>

<dl>
  <dt><spanx style="verb">next_token</spanx>:</dt>
  <dd>
    <t>REQUIRED. An opaque string value indicating the next page of results to return. If there are no more results after this page, its value MUST be an empty string.</t>
  </dd>
  <dt><spanx style="verb">count</spanx>:</dt>
  <dd>
    <t>OPTIONAL. A non-negative integer indicating the number of results included in this response. When included at the start of a response, as described in the Search API Response (<xref target="search-response"/>), this enables a PEP to display a progress indicator when processing large or slow responses.</t>
  </dd>
  <dt><spanx style="verb">total</spanx>:</dt>
  <dd>
    <t>OPTIONAL. A non-negative integer indicating the total number of results matching the query criteria at the time of the request. This value is not guaranteed to equal the total number of items returned across all pages if the underlying data set changes during pagination.</t>
  </dd>
  <dt><spanx style="verb">properties</spanx>:</dt>
  <dd>
    <t>OPTIONAL. An object containing additional pagination response attributes. Examples include, but are not limited to, estimated totals or the number of remaining results.</t>
  </dd>
</dl>

</section>
<section anchor="search-pagination-examples"><name>Examples (non-normative)</name>

<t>The following is a non-normative example of a request-response cycle to retrieve a total of three results with a page size limit of two.</t>

<figure title="Example initial Search API Request" anchor="search-pagination-token-initial-request"><sourcecode type="json"><![CDATA[
{
  "subject": {
    "type": "user",
    "id": "alice@example.com"
  },
  "action": {
    "name": "can_read"
  },
  "resource": {
    "type": "account"
  },
  "page": {
    "limit": 2
  }
}
]]></sourcecode></figure>

<figure title="Example initial Search API Response" anchor="search-pagination-token-initial-response"><sourcecode type="json"><![CDATA[
{
  "page": {
    "next_token": "a3M9NDU2O3N6PTI=",
    "count": 2,
    "total": 3
  },
  "results": [
    {
      "type": "account",
      "id": "123"
    },
    {
      "type": "account",
      "id": "456"
    }
  ]
}
]]></sourcecode></figure>

<figure title="Example second Search API Request" anchor="search-pagination-token-second-request"><sourcecode type="json"><![CDATA[
{
  "subject": {
    "type": "user",
    "id": "alice@example.com"
  },
  "action": {
    "name": "can_read"
  },
  "resource": {
    "type": "account"
  },
  "page": {
    "token": "a3M9NDU2O3N6PTI="
  }
}
]]></sourcecode></figure>

<figure title="Example second Search API Response" anchor="search-pagination-token-second-response"><sourcecode type="json"><![CDATA[
{
  "page": {
    "next_token": "",
    "count": 1,
    "total": 3
  },
  "results": [
    {
      "type": "account",
      "id": "789"
    }
  ]
}
]]></sourcecode></figure>

</section>
</section>
<section anchor="search-response"><name>The Search API Response</name>

<t>The response to a Search API Request always follows the same structure. Each Search API Response is a JSON object with the following keys:</t>

<dl>
  <dt><spanx style="verb">page</spanx>:</dt>
  <dd>
    <t>OPTIONAL. An object providing pagination information, as defined in Paginated Responses (<xref target="search-pagination-response"/>). It is RECOMMENDED that the <spanx style="verb">page</spanx> object be the first key in the response, as this allows a PEP to use the <spanx style="verb">count</spanx> value to display a progress indicator when processing large or slow responses.</t>
  </dd>
  <dt><spanx style="verb">context</spanx>:</dt>
  <dd>
    <t>OPTIONAL. An object that can convey additional information that can be used by the PEP, similar to its function in the Access Evaluation Response (see <xref target="access-evaluation-response"/>).</t>
  </dd>
  <dt><spanx style="verb">results</spanx>:</dt>
  <dd>
    <t>REQUIRED. An array containing zero or more entities, as defined in the Information Model (<xref target="information-model"/>). It MUST contain only entities of the type being searched for (e.g., Subjects, Resources, or Actions).</t>
  </dd>
</dl>

<t>The following is a non-normative example of a search response returning resources:</t>

<figure title="Example Resource Search API Response" anchor="search-response-example"><sourcecode type="json"><![CDATA[
{
  "page": {
    "count": 2,
    "total": 102
  },
  "context": {
    "query_execution_time_ms": 42
  },
  "results": [
    {
      "type": "account",
      "id": "123"
    },
    {
      "type": "account",
      "id": "456"
    }
  ]
}
]]></sourcecode></figure>

</section>
<section anchor="subject-search-api"><name>Subject Search API</name>

<t>The Subject Search API returns all subjects of a given type that are permitted according to the provided Action (<xref target="action"/>), Resource (<xref target="resource"/>), and Context (<xref target="context"/>).</t>

<section anchor="subject-search-request"><name>The Subject Search API Request</name>

<t>The Subject Search request is an object consisting of the following entities:</t>

<dl>
  <dt><spanx style="verb">subject</spanx>:</dt>
  <dd>
    <t>REQUIRED. The subject (or principal) of type Subject. The Subject MUST contain a <spanx style="verb">type</spanx>, but the Subject <spanx style="verb">id</spanx> SHOULD be omitted, and if present, MUST be ignored.</t>
  </dd>
  <dt><spanx style="verb">action</spanx>:</dt>
  <dd>
    <t>REQUIRED. The action (or verb) of type Action.</t>
  </dd>
  <dt><spanx style="verb">resource</spanx>:</dt>
  <dd>
    <t>REQUIRED. The resource of type Resource.</t>
  </dd>
  <dt><spanx style="verb">context</spanx>:</dt>
  <dd>
    <t>OPTIONAL. Contextual data about the request.</t>
  </dd>
  <dt><spanx style="verb">page</spanx>:</dt>
  <dd>
    <t>OPTIONAL. A page object for paginated requests.</t>
  </dd>
</dl>

</section>
<section anchor="example-non-normative-1"><name>Example (non-normative)</name>

<t>The following payload defines a request for the subjects of type <spanx style="verb">user</spanx> that can perform the <spanx style="verb">can_read</spanx> action on the resource of type <spanx style="verb">account</spanx> and ID <spanx style="verb">123</spanx>.</t>

<figure title="Example Subject Search API Request" anchor="subject-search-request-example"><sourcecode type="json"><![CDATA[
{
  "subject": {
    "type": "user"
  },
  "action": {
    "name": "can_read"
  },
  "resource": {
    "type": "account",
    "id": "123"
  },
  "context": {
    "time": "2024-10-26T01:22-07:00"
  }
}
]]></sourcecode></figure>

<t>The following payload defines a valid response to this request.</t>

<figure title="Example Subject Search API Response" anchor="subject-search-response-example"><sourcecode type="json"><![CDATA[
{
  "results": [
    {
      "type": "user",
      "id": "alice@example.com"
    },
    {
      "type": "user",
      "id": "bob@example.com"
    }
  ]
}
]]></sourcecode></figure>

</section>
</section>
<section anchor="resource-search-api"><name>Resource Search API</name>

<t>The Resource Search API returns all resources of a given type that are permitted according to the provided Action (<xref target="action"/>), Subject (<xref target="subject"/>), and Context (<xref target="context"/>).</t>

<section anchor="resource-search-request"><name>The Resource Search API Request</name>

<t>The Resource Search request is an object consisting of the following entities:</t>

<dl>
  <dt><spanx style="verb">subject</spanx>:</dt>
  <dd>
    <t>REQUIRED. The subject (or principal) of type Subject.</t>
  </dd>
  <dt><spanx style="verb">action</spanx>:</dt>
  <dd>
    <t>REQUIRED. The action (or verb) of type Action.</t>
  </dd>
  <dt><spanx style="verb">resource</spanx>:</dt>
  <dd>
    <t>REQUIRED. The resource of type Resource. The Resource MUST contain a <spanx style="verb">type</spanx>, but the Resource <spanx style="verb">id</spanx> SHOULD be omitted, and if present, MUST be ignored.</t>
  </dd>
  <dt><spanx style="verb">context</spanx>:</dt>
  <dd>
    <t>OPTIONAL. Contextual data about the request.</t>
  </dd>
  <dt><spanx style="verb">page</spanx>:</dt>
  <dd>
    <t>OPTIONAL. A page object for paginated requests.</t>
  </dd>
</dl>

</section>
<section anchor="example-non-normative-2"><name>Example (non-normative)</name>

<t>The following payload defines a request for the resources of type <spanx style="verb">account</spanx> on which the subject of type <spanx style="verb">user</spanx> and ID <spanx style="verb">alice@example.com</spanx> can perform the <spanx style="verb">can_read</spanx> action.</t>

<figure title="Example Resource Search API Request" anchor="resource-search-request-example"><sourcecode type="json"><![CDATA[
{
  "subject": {
    "type": "user",
    "id": "alice@example.com"
  },
  "action": {
    "name": "can_read"
  },
  "resource": {
    "type": "account"
  }
}
]]></sourcecode></figure>

<t>The following payload defines a valid response to this request.</t>

<figure title="Example Resource Search API Response" anchor="resource-search-response-example"><sourcecode type="json"><![CDATA[
{
  "results": [
    {
      "type": "account",
      "id": "123"
    },
    {
      "type": "account",
      "id": "456"
    }
  ]
}
]]></sourcecode></figure>

</section>
</section>
<section anchor="action-search-api"><name>Action Search API</name>

<t>The Action Search API returns all actions that are permitted according to the provided Subject (<xref target="subject"/>), Resource (<xref target="resource"/>), and Context (<xref target="context"/>).</t>

<section anchor="action-search-request"><name>The Action Search API Request</name>

<t>The Action Search request is an object consisting of the following entities:</t>

<dl>
  <dt><spanx style="verb">subject</spanx>:</dt>
  <dd>
    <t>REQUIRED. The subject (or principal) of type Subject.</t>
  </dd>
  <dt><spanx style="verb">resource</spanx>:</dt>
  <dd>
    <t>REQUIRED. The resource of type Resource.</t>
  </dd>
  <dt><spanx style="verb">context</spanx>:</dt>
  <dd>
    <t>OPTIONAL. Contextual data about the request.</t>
  </dd>
  <dt><spanx style="verb">page</spanx>:</dt>
  <dd>
    <t>OPTIONAL. A page object for paginated requests.</t>
  </dd>
</dl>

<t>Note: Unlike the Subject and Resource Search APIs, the <spanx style="verb">action</spanx> key is omitted from the Action Search request payload.</t>

</section>
<section anchor="example-non-normative-3"><name>Example (non-normative)</name>

<t>The following payload defines a request for the actions that the subject of type <spanx style="verb">user</spanx> with ID <spanx style="verb">123</spanx> may perform on the resource of type <spanx style="verb">account</spanx> and ID <spanx style="verb">123</spanx> at 01:22 AM.</t>

<figure title="Example Action Search API Request" anchor="action-search-request-example"><sourcecode type="json"><![CDATA[
{
  "subject": {
    "type": "user",
    "id": "alice@example.com"
  },
  "resource": {
    "type": "account",
    "id": "123"
  },
  "context": {
    "time": "2024-10-26T01:22-07:00"
  }
}
]]></sourcecode></figure>

<t>The following payload defines a valid response to this request.</t>

<figure title="Example Action Search API Response" anchor="action-search-response-example"><sourcecode type="json"><![CDATA[
{
  "results": [
    {
      "name": "can_read"
    },
    {
      "name": "can_write"
    }
  ]
}
]]></sourcecode></figure>

</section>
</section>
</section>
<section anchor="pdp-metadata"><name>Policy Decision Point Metadata</name>

<t>It is RECOMMENDED that PDPs provide metadata describing their configuration.</t>

<section anchor="pdp-metadata-data"><name>Data structure</name>

<t>The following Policy Decision Point metadata parameters are used by this specification and are registered in the IANA "AuthZEN Policy Decision Point Metadata" registry established in <xref target="iana-pdp-metadata-registry"/>.</t>

<section anchor="pdp-metadata-data-endpoint"><name>Endpoint Parameters</name>

<dl>
  <dt><spanx style="verb">policy_decision_point</spanx>:</dt>
  <dd>
    <t>REQUIRED. The Policy Decision Point identifier, which is a URL that uses the "https" scheme and has no query or fragment components. Policy Decision Point metadata is published at a location that is ".well-known" according to <xref target="RFC8615"/> derived from this Policy Decision Point identifier, as described in <xref target="pdp-metadata-access"/>. The Policy Decision Point identifier is used to prevent Policy Decision Point mix-up attacks.</t>
  </dd>
  <dt><spanx style="verb">access_evaluation_endpoint</spanx>:</dt>
  <dd>
    <t>REQUIRED. URL of Access Evaluation API endpoint</t>
  </dd>
  <dt><spanx style="verb">access_evaluations_endpoint</spanx>:</dt>
  <dd>
    <t>OPTIONAL. URL of Access Evaluations API endpoint</t>
  </dd>
  <dt><spanx style="verb">search_subject_endpoint</spanx>:</dt>
  <dd>
    <t>OPTIONAL. URL of Search API endpoint for subject entities</t>
  </dd>
  <dt><spanx style="verb">search_action_endpoint</spanx>:</dt>
  <dd>
    <t>OPTIONAL. URL of Search API endpoint for action entities</t>
  </dd>
  <dt><spanx style="verb">search_resource_endpoint</spanx>:</dt>
  <dd>
    <t>OPTIONAL. URL of Search API endpoint for resource entities</t>
  </dd>
</dl>

<t>Note: the absence of any of these parameters is sufficient for the PEP to determine that the PDP is not capable and therefore will not return a result for the associated API.</t>

</section>
<section anchor="pdp-metadata-data-capabilities"><name>Capabilities Parameters</name>

<dl>
  <dt><spanx style="verb">capabilities</spanx>:</dt>
  <dd>
    <t>OPTIONAL. JSON array containing a list of registered IANA URNs referencing PDP specific capabilities.</t>
  </dd>
</dl>

</section>
<section anchor="pdp-metadata-data-sig"><name>Signature Parameter</name>

<t>In addition to JSON elements, metadata parameters MAY also be provided as a <spanx style="verb">signed_metadata</spanx> value, which is a JSON Web Token <xref target="RFC7519"/> that asserts metadata values about the PDP as a bundle. A set of metadata parameters that can be used in signed metadata as claims are defined in <xref target="pdp-metadata-data-endpoint"/>. The signed metadata MUST be digitally signed or MACed using JSON Web Signature <xref target="RFC7515"/> and MUST contain an <spanx style="verb">iss</spanx> (issuer) claim denoting the party attesting to the claims in the signed metadata.</t>

<t>A PEP MAY ignore the signed metadata if they do not support this feature. If the PEP supports signed metadata, metadata values conveyed in the signed metadata MUST take precedence over the corresponding values conveyed using plain JSON elements. Signed metadata is included in the Policy Decision Point metadata JSON object using this OPTIONAL metadata parameter:</t>

<dl>
  <dt><spanx style="verb">signed_metadata</spanx>:</dt>
  <dd>
    <t>A JWT containing metadata parameters about the protected resource as claims. This is a string value consisting of the entire signed JWT. A <spanx style="verb">signed_metadata</spanx> parameter SHOULD NOT appear as a claim in the JWT; it is RECOMMENDED to reject any metadata in which this occurs.</t>
  </dd>
</dl>

</section>
</section>
<section anchor="pdp-metadata-access"><name>Obtaining Policy Decision Point Metadata</name>

<t>PDPs supporting metadata MUST make a JSON document containing metadata as specified in the AuthZEN Policy Decision Point Metadata Registry (<xref target="iana-pdp-metadata-registry"/>) available at a URL formed by inserting a well-known URI string between the host component and the path and/or query components, if any. The well-known URI string used is <spanx style="verb">/.well-known/authzen-configuration</spanx>.</t>

<t>The syntax and semantics of .well-known are defined in <xref target="RFC8615"/>. The well-known URI path suffix used is registered in the IANA "Well-Known URIs" registry <xref target="IANA.well-known-uris"/>.</t>

<t>An example of a PDP supporting multiple tenants will have a discovery endpoint as follows:</t>

<figure><artwork><![CDATA[
https://pdp.example.com/.well-known/authzen-configuration/tenant1
]]></artwork></figure>

<section anchor="pdp-metadata-access-request"><name>Policy Decision Point Metadata Request</name>

<t>A Policy Decision Point metadata document MUST be queried using an HTTP GET request at the previously specified URL. The consumer of the metadata would make the following request when the resource identifier is https://pdp.example.com:</t>

<figure><sourcecode type="http"><![CDATA[
GET /.well-known/authzen-configuration HTTP/1.1
Host: pdp.example.com
]]></sourcecode></figure>

</section>
<section anchor="pdp-metadata-access-response"><name>Policy Decision Point Metadata Response</name>

<t>The response is a set of metadata parameters about the protected resource's configuration.</t>

<t>A successful response MUST use the HTTP status code <spanx style="verb">200</spanx> and a <spanx style="verb">Content-Type</spanx> of <spanx style="verb">application/json</spanx>. Its body MUST be a JSON object that contains a set of metadata parameters as defined in the AuthZEN Policy Decision Point Metadata Registry (<xref target="iana-pdp-metadata-registry"/>).</t>

<t>Any metadata parameters in the response that are not understood by the PEP MUST be ignored.</t>

<t>Parameters that have multiple values are represented as JSON arrays. Parameters that have no values MUST be omitted from the response.</t>

<t>An error response uses the applicable HTTP status code value.</t>

<t>The following is a non-normative example response:</t>

<figure><sourcecode type="http"><![CDATA[
HTTP/1.1 200 OK
Content-Type: application/json

{
  "policy_decision_point": "https://pdp.example.com",
  "access_evaluation_endpoint": "https://pdp.example.com/access/v1/evaluation",
  "search_subject_endpoint": "https://pdp.example.com/access/v1/search/subject",
  "search_resource_endpoint": "https://pdp.example.com/access/v1/search/resource"
}
]]></sourcecode></figure>

</section>
<section anchor="pdp-metadata-data-endpoint-validation"><name>Policy Decision Point Metadata Validation</name>

<t>The <spanx style="verb">policy_decision_point</spanx> value returned MUST be identical to the Policy Decision Point identifier value into which the well-known URI string was inserted to create the URL used to retrieve the metadata.  If these values are not identical, the data contained in the response MUST NOT be used.</t>

<t>The recipient MUST validate that any signed metadata was signed by a key belonging to the issuer and that the signature is valid. If the signature does not validate or the issuer is not trusted, the recipient SHOULD treat this as an error condition.</t>

</section>
</section>
</section>
<section anchor="transport"><name>Transport</name>

<t>This specification defines an HTTPS binding using JSON serialization which MUST be implemented by a compliant PDP.</t>

<t>Additional transport bindings (e.g. gRPC or CoAP) MAY be defined in the future in the form of profiles, and MAY be implemented by a PDP.</t>

<section anchor="transport-https-json"><name>HTTPS JSON Binding</name>

<t>All API requests within this binding are made via an HTTPS <spanx style="verb">POST</spanx> request.</t>

<t>Requests MUST include a <spanx style="verb">Content-Type</spanx> header with the value <spanx style="verb">application/json</spanx>, and the request body for each endpoint MUST be a JSON object that conforms to the corresponding request structure, as defined in <xref target="_table-api-endpoints"/>.</t>

<t>A successful response is an HTTPS response with a status code of <spanx style="verb">200</spanx> and a <spanx style="verb">Content-Type</spanx> of <spanx style="verb">application/json</spanx>. Its body is a JSON object that conforms to the corresponding response structure, as defined in <xref target="_table-api-endpoints"/>.</t>

<t>The request URL MUST be the value of the corresponding endpoint parameter, as defined in <xref target="_table-api-endpoints"/>, if it is provided in the Policy Decision Point metadata (<xref target="pdp-metadata-data-endpoint"/>). If the parameter is not provided, the URL SHOULD be formed by appending the default path, as defined in <xref target="_table-api-endpoints"/>, to the PDP's base URL (which is the <spanx style="verb">policy_decision_point</spanx> value from the Policy Decision Point metadata, if available.</t>

<t>The following table provides an overview of the API endpoints defined in this binding:</t>

<texttable title="API Endpoint Overview" anchor="_table-api-endpoints">
      <ttcol align='left'>API Endpoint</ttcol>
      <ttcol align='left'>Default Path</ttcol>
      <ttcol align='left'>Metadata Parameter</ttcol>
      <ttcol align='left'>Request Schema</ttcol>
      <ttcol align='left'>Response Schema</ttcol>
      <c>Access Evaluation</c>
      <c>/access/v1/evaluation</c>
      <c>access_evaluation_endpoint</c>
      <c><xref target="access-evaluation-request"/></c>
      <c><xref target="access-evaluation-response"/></c>
      <c>Access Evaluations</c>
      <c>/access/v1/evaluations</c>
      <c>access_evaluations_endpoint</c>
      <c><xref target="access-evaluations-request"/></c>
      <c><xref target="access-evaluations-response"/></c>
      <c>Subject Search</c>
      <c>/access/v1/search/subject</c>
      <c>search_subject_endpoint</c>
      <c><xref target="subject-search-request"/></c>
      <c><xref target="search-response"/></c>
      <c>Resource Search</c>
      <c>/access/v1/search/resource</c>
      <c>search_resource_endpoint</c>
      <c><xref target="resource-search-request"/></c>
      <c><xref target="search-response"/></c>
      <c>Action Search</c>
      <c>/access/v1/search/action</c>
      <c>search_action_endpoint</c>
      <c><xref target="action-search-request"/></c>
      <c><xref target="search-response"/></c>
</texttable>

<section anchor="transport-https-json-serialization"><name>JSON Serialization</name>

<t>This section specifies the serialization of the information model entities and API schemas defined in this document to the JSON format <xref target="RFC8259"/>. The top-level element of all request and response bodies MUST be a JSON object (<xref section="4" sectionFormat="of" target="RFC8259"/>). Implementations SHOULD also adhere to the security recommendations in JSON Payload Considerations (<xref target="security-json"/>).</t>

<t>The data types defined in this specification are mapped to JSON types as follows:</t>

<dl>
  <dt>Object:</dt>
  <dd>
    <t>Represented as a JSON object (<xref section="4" sectionFormat="of" target="RFC8259"/>). The values of its members can be any valid JSON value as defined in <xref section="3" sectionFormat="of" target="RFC8259"/>, including other objects and arrays, unless specified otherwise.</t>
  </dd>
  <dt>Array:</dt>
  <dd>
    <t>Represented as a JSON array (<xref section="5" sectionFormat="of" target="RFC8259"/>).</t>
  </dd>
  <dt>String:</dt>
  <dd>
    <t>Represented as a JSON string (<xref section="7" sectionFormat="of" target="RFC8259"/>).</t>
  </dd>
  <dt>Integer:</dt>
  <dd>
    <t>Represented as a JSON number (<xref section="6" sectionFormat="of" target="RFC8259"/>). Note the recommendation in <xref target="security-json"/> to not encode values that exceed IEEE 754 double-precision.</t>
  </dd>
  <dt>Boolean:</dt>
  <dd>
    <t>Represented as the JSON literals <spanx style="verb">true</spanx> or <spanx style="verb">false</spanx> (<xref section="3" sectionFormat="of" target="RFC8259"/>).</t>
  </dd>
</dl>

</section>
<section anchor="error-responses"><name>Error Responses</name>
<t>The following error responses are common to all methods of the Authorization API. The error response is indicated by an HTTPS status code (<xref section="15" sectionFormat="of" target="RFC9110"/>) that indicates error.</t>

<t>The following errors are indicated by the status codes defined below:</t>

<texttable title="HTTPS Error status codes" anchor="_table-error-status-codes">
      <ttcol align='left'>Code</ttcol>
      <ttcol align='left'>Description</ttcol>
      <ttcol align='left'>HTTPS Body Content</ttcol>
      <c>400</c>
      <c>Bad Request</c>
      <c>An error message string</c>
      <c>401</c>
      <c>Unauthorized</c>
      <c>An error message string</c>
      <c>403</c>
      <c>Forbidden</c>
      <c>An error message string</c>
      <c>500</c>
      <c>Internal Error</c>
      <c>An error message string</c>
</texttable>

<t>Note: HTTPS errors are returned by the PDP to indicate an error condition relating to the request or its processing; they are unrelated to the outcome of an authorization decision and are distinct from it. A successful request that results in a "deny" is indicated by a 200 OK status code with a { "decision": false } payload.</t>

<t>To make this concrete:</t>

<t><list style="symbols">
  <t>a <spanx style="verb">401</spanx> HTTPS status code indicates that the PEP did not properly authenticate to the PDP - for example, by omitting a required <spanx style="verb">Authorization</spanx> header, or using an invalid access token.</t>
  <t>the PDP indicates to the PEP that the authorization request is denied by sending a response with a <spanx style="verb">200</spanx> HTTPS status code, along with a payload of <spanx style="verb">{ "decision": false }</spanx>.</t>
</list></t>

</section>
<section anchor="request-identification"><name>Request Identification</name>
<t>All requests to the API MAY have request identifiers to uniquely identify them. The PEP is responsible for generating the request identifier. If present, it is RECOMMENDED to use the HTTPS Header <spanx style="verb">X-Request-ID</spanx> as the request identifier. The value of this header is an arbitrary string. The following non-normative example describes this header:</t>

<figure title="Example HTTPS request with a Request Id Header" anchor="request-id-example"><sourcecode type="http"><![CDATA[
POST /access/v1/evaluation HTTP/1.1
Authorization: Bearer mF_9.B5f-4.1JqM
X-Request-ID: bfe9eb29-ab87-4ca3-be83-a1d5d8305716
]]></sourcecode></figure>

<t>When an Authorization API request contains a request identifier the PDP MUST include a request identifier in the response. It is RECOMMENDED to specify the request identifier using the HTTPS Response header <spanx style="verb">X-Request-ID</spanx>. If the PEP specified a request identifier in the request, the PDP MUST include the same identifier in the response to that request.</t>

<t>The following is a non-normative example of an HTTPS Response with this header:</t>

<figure title="Example HTTPS response with a Request Id Header" anchor="example-response-request-id"><sourcecode type="http"><![CDATA[
HTTP/1.1 OK
Content-Type: application/json
X-Request-ID: bfe9eb29-ab87-4ca3-be83-a1d5d8305716
]]></sourcecode></figure>

</section>
<section anchor="examples-non-normative"><name>Examples (non-normative)</name>

<t>The following is a non-normative example of the HTTPS binding of the Access Evaluation Request:</t>

<figure title="Example of an HTTPS Access Evaluation Request" anchor="example-access-evaluation-request"><sourcecode type="http"><![CDATA[
POST /access/v1/evaluation HTTP/1.1
Host: pdp.example.com
Content-Type: application/json
Authorization: Bearer <myoauthtoken>
X-Request-ID: bfe9eb29-ab87-4ca3-be83-a1d5d8305716

{
  "subject": {
    "type": "user",
    "id": "alice@example.com"
  },
  "resource": {
    "type": "todo",
    "id": "1"
  },
  "action": {
    "name": "can_read"
  },
  "context": {
    "time": "1985-10-26T01:22-07:00"
  }
}
]]></sourcecode></figure>

<t>The following is a non-normative example of an HTTPS Access Evaluation Response:</t>

<figure title="Example of an HTTP Access Evaluation Response" anchor="example-access-evaluation-response"><sourcecode type="http"><![CDATA[
HTTP/1.1 OK
Content-Type: application/json
X-Request-ID: bfe9eb29-ab87-4ca3-be83-a1d5d8305716

{
  "decision": true
}
]]></sourcecode></figure>

<t>The following is a non-normative example of a the HTTPS binding of the Access Evaluations Request:</t>

<figure title="Example of an HTTPS Access Evaluations Request" anchor="example-access-evaluations-request"><sourcecode type="http"><![CDATA[
POST /access/v1/evaluations HTTP/1.1
Host: pdp.example.com
Content-Type: application/json
Authorization: Bearer <myoauthtoken>
X-Request-ID: bfe9eb29-ab87-4ca3-be83-a1d5d8305716

{
  "subject": {
    "type": "user",
    "id": "alice@example.com"
  },
  "context": {
    "time": "2024-05-31T15:22-07:00"
  },
  "action": {
    "name": "can_read"
  },
  "evaluations": [
    {
      "resource": {
        "type": "document",
        "id": "boxcarring.md"
      }
    },
    {
      "resource": {
        "type": "document",
        "id": "subject-search.md"
      }
    },
    {
      "action": {
        "name": "can_edit"
      },
      "resource": {
        "type": "document",
        "id": "resource-search.md"
      }
    }
  ]
}
]]></sourcecode></figure>

<t>The following is a non-normative example of an HTTPS Access Evaluations Response:</t>

<figure title="Example of an HTTPS Access Evaluations Response" anchor="example-access-evaluations-response"><sourcecode type="http"><![CDATA[
HTTP/1.1 OK
Content-Type: application/json
X-Request-ID: bfe9eb29-ab87-4ca3-be83-a1d5d8305716

{
  "evaluations": [
    {
      "decision": true
    },
    {
      "decision": false,
      "context": {
        "error": {
          "status": 404,
          "message": "Resource not found"
        }
      }
    },
    {
      "decision": false,
      "context": {
        "reason": "Subject is a viewer of the resource"
      }
    }
  ]
}
]]></sourcecode></figure>

<t>The following is a non-normative example of the HTTPS binding of the Subject Search Request:</t>

<figure title="Example of an HTTPS Subject Search Request" anchor="example-subject-search-request"><sourcecode type="http"><![CDATA[
POST /access/v1/search/subject HTTP/1.1
Host: pdp.example.com
Content-Type: application/json
Authorization: Bearer <myoauthtoken>
X-Request-ID: bfe9eb29-ab87-4ca3-be83-a1d5d8305716

{
  "subject": {
    "type": "user"
  },
  "action": {
    "name": "can_read"
  },
  "resource": {
    "type": "account",
    "id": "123"
  }
}
]]></sourcecode></figure>

<t>The following is a non-normative example of an HTTPS Subject Search Response:</t>

<figure title="Example of an HTTPS Subject Search Response" anchor="example-subject-search-response"><sourcecode type="http"><![CDATA[
HTTP/1.1 OK
Content-Type: application/json
X-Request-ID: bfe9eb29-ab87-4ca3-be83-a1d5d8305716

{
  "page": {
    "next_token": "a3M9NDU2O3N6PTI="
  },
  "results": [
    {
      "type": "user",
      "id": "alice@example.com"
    },
    {
      "type": "user",
      "id": "bob@example.com"
    }
  ]
}
]]></sourcecode></figure>

<t>The following is a non-normative example of the HTTPS binding of the Resource Search Request:</t>

<figure title="Example of an HTTPS Resource Search Request" anchor="example-resource-search-request"><sourcecode type="http"><![CDATA[
POST /access/v1/search/resource HTTP/1.1
Host: pdp.example.com
Content-Type: application/json
Authorization: Bearer <myoauthtoken>
X-Request-ID: bfe9eb29-ab87-4ca3-be83-a1d5d8305716

{
  "subject": {
    "type": "user",
    "id": "alice@example.com"
  },
  "action": {
    "name": "can_read"
  },
  "resource": {
    "type": "account"
  }
}
]]></sourcecode></figure>

<t>The following is a non-normative example of an HTTPS Resource Search Response:</t>

<figure title="Example of an HTTPS Resource Search Response" anchor="example-resource-search-response"><sourcecode type="http"><![CDATA[
HTTP/1.1 OK
Content-Type: application/json
X-Request-ID: bfe9eb29-ab87-4ca3-be83-a1d5d8305716

{
  "page": {
    "next_token": "a3M9NDU2O3N6PTI="
  },
  "results": [
    {
      "type": "account",
      "id": "123"
    },
    {
      "type": "account",
      "id": "456"
    }
  ]
}
]]></sourcecode></figure>

<t>The following is a non-normative example of the HTTPS binding of the Action Search Request:</t>

<figure title="Example of an HTTPS Action Search Request" anchor="example-action-search-request"><sourcecode type="http"><![CDATA[
POST /access/v1/search/action HTTP/1.1
Host: pdp.example.com
Content-Type: application/json
Authorization: Bearer <myoauthtoken>
X-Request-ID: bfe9eb29-ab87-4ca3-be83-a1d5d8305716

{
  "subject": {
    "type": "user",
    "id": "alice@example.com"
  },
  "resource": {
    "type": "account",
    "id": "123"
  },
  "context": {
    "time": "2024-10-26T01:22-07:00"
  }
}
]]></sourcecode></figure>

<t>The following is a non-normative example of an HTTPS Action Search Response:</t>

<figure title="Example of an HTTPS Action Search Response" anchor="example-action-search-response"><sourcecode type="http"><![CDATA[
HTTP/1.1 OK
Content-Type: application/json
X-Request-ID: bfe9eb29-ab87-4ca3-be83-a1d5d8305716

{
  "page": {
    "next_token": "a3M9NDU2O3N6PTI="
  },
  "results": [
    {
      "name": "can_read"
    },
    {
      "name": "can_write"
    }
  ]
}
]]></sourcecode></figure>

</section>
</section>
</section>
<section anchor="Security"><name>Security Considerations</name>

<section anchor="security-integrity-confidentiality"><name>Communication Integrity and Confidentiality</name>

<t>In the ABAC architecture, the PEP-PDP connection is the most sensitive one and needs to be secured to guarantee:</t>

<t><list style="symbols">
  <t>Integrity</t>
  <t>Confidentiality</t>
</list></t>

<t>As a result, the connection between the PEP and the PDP MUST be secured using the most adequate means given the choice of transport (e.g. TLS for HTTP REST).</t>

</section>
<section anchor="security-confidentiality-authn"><name>Policy Confidentiality and Sender Authentication</name>

<t>Additionally, the PDP SHOULD authenticate the calling PEP. There are several ways authentication can be established. These ways are out of scope of this specification. They MAY include:</t>

<t><list style="symbols">
  <t>Mutual TLS</t>
  <t>OAuth-based authentication</t>
  <t>API key</t>
</list></t>

<t>The choice and strength of either mechanism is not in scope.</t>

<t>Authenticating the PEP allows the PDP to avoid common attacks (such as DoS - see below) and/or reveal its internal policies. A malicious actor could craft a large number of requests to try and understand what policies the PDP is configured with. Requesting a PEP be authenticated mitigates that risk.</t>

</section>
<section anchor="security-sender-authentn-fail"><name>Sender Authentication Failure</name>

<t>If the protected resource request does not include the proper authentication credentials, or does not have a valid authentication scheme proof that enables access to the protected resource, the resource server MUST respond with a 401 HTTP status code and SHOULD include the HTTP "WWW-Authenticate" response header field; it MAY include it in response to other conditions as well. The "WWW-Authenticate" header field uses the framework defined by HTTP/1.1 <xref target="RFC2617"/> and indicates the expected authentication scheme as well as the realm that has authority for it.</t>

<t>The following is a non-normative example response:</t>

<t><spanx style="verb">http
HTTP/1.1 401 Unauthorized
WWW-Authenticate: Bearer realm="https://as.example.com"
</spanx></t>

</section>
<section anchor="security-trust"><name>Trust</name>

<t>In ABAC, there are occasionally conversations around the trust between PEP and PDP: how can the PDP trust that the PEP is sending the correct values? The architecture of this model assumes the PDP must trust the PEP, as the PEP is ultimately responsible for enforcing the decision the PDP produces.</t>

</section>
<section anchor="security-json"><name>JSON Payload Considerations</name>

<t>To ensure the unambiguous interpretation of JSON payloads, implementations SHOULD process and generate JSON payloads in a manner consistent with the I-JSON profile (<xref target="RFC7493"/>). In particular, implementations SHOULD ensure that:</t>

<t><list style="symbols">
  <t>JSON text is encoded as UTF-8, and strings do not contain invalid Unicode sequences such as unpaired surrogates (<xref section="2.1" sectionFormat="of" target="RFC7493"/>).</t>
  <t>Numeric values do not exceed the magnitude or precision supported by IEEE 754 double-precision (<xref section="2.2" sectionFormat="of" target="RFC7493"/>).</t>
  <t>Member names within a JSON object are unique after processing escape characters (<xref section="2.3" sectionFormat="of" target="RFC7493"/>).</t>
</list></t>

<t>To avoid ambiguity between a property that is absent and one that is present with a null value, properties with a value of null SHOULD be omitted from JSON objects.</t>

</section>
<section anchor="security-authorization-response-integrity"><name>Authorization Response Integrity</name>

<t>The PDP MAY choose to sign its authorization response, ensuring the PEP can verify the integrity of the data it receives. This practice is valuable for maintaining trust in the authorization process.</t>

<t>The PEP can ensure that the authorization response is not tampered with by verifying the signature of the authorization decision if it is signed. It ensures response accuracy and completeness.</t>

<t>TLS effectively protects data in transit for a direct, point-to-point connection but does not guarantee data integrity for the full connection path between the PEP and the PDP if there are intermediaries, such as proxies or gateways.</t>

<t>Digital signatures offer important advantages in this context. They provide non-repudiation, allowing verification that the response genuinely originated from the PDP. Moreover, digital signatures ensure the integrity of the authorization response, confirming that its contents have not been altered in transit.</t>

</section>
<section anchor="availability-denial-of-service-security-avail-dos"><name>Availability &amp; Denial of Service {#security-avail-dos}}</name>

<t>The PDP SHOULD apply reasonable protections to avoid common attacks tied to request payload size, the number of requests, invalid JSON, nested JSON attacks, or memory consumption. Rate limiting is one such way to address such issues.</t>

</section>
<section anchor="security-metadata-sig"><name>Differences between Unsigned and Signed Metadata</name>

<t>Unsigned metadata is integrity protected by use of TLS at the site where it is hosted. This means that its security is dependent upon the Internet Public Key Infrastructure (PKI) <xref target="RFC9525"/>. Signed metadata is additionally integrity protected by the JWS signature applied by the issuer, which is not dependent upon the Internet PKI.
When using unsigned metadata, the party issuing the metadata is the PDP itself. Whereas, when using signed metadata, the party issuing the metadata is represented by the <spanx style="verb">iss</spanx> (issuer) claim in the signed metadata. When using signed metadata, applications can make trust decisions based on the issuer that performed the signing -- information that is not available when using unsigned metadata. How these trust decisions are made is out of scope for this specification.</t>

</section>
<section anchor="security-metadata-caching"><name>Metadata Caching</name>

<t>Policy Decision Point metadata is retrieved using an HTTP GET request, as specified in <xref target="pdp-metadata-access-request"/>. Normal HTTP caching behaviors apply, meaning that the GET may retrieve a cached copy of the content, rather than the latest copy. Implementations should utilize HTTP caching directives such as Cache-Control with max-age, as defined in <xref target="RFC7234"/>, to enable caching of retrieved metadata for appropriate time periods.</t>

</section>
</section>
<section anchor="iana"><name>IANA Considerations</name>

<t>This specification requests IANA to take four actions: the creation of a new protocol registry group named 'AuthZEN', the establishment of two new registries within this group ('AuthZEN Policy Decision Point Metadata' and 'AuthZEN Policy Decision Point Capabilities'), the registration of a new Well-Known URI ('authzen-configuration'), and the registration of a new URN sub-namespace ('authzen').</t>

<t>The following registration procedure is used for the registries established by this specification.</t>

<t>Values are registered on a Specification Required <xref target="RFC8126"/> basis after a two-week review period on the openid-specs-authzen@lists.openid.net mailing list, following review and approval by one or more Designated Experts. However, to allow for the allocation of values prior to publication of the final version of a specification, the Designated Experts may approve registration once they are satisfied that the specification will be completed and published. However, if the specification is not completed and published in a timely manner, as determined by the Designated Experts, the Designated Experts may request that IANA withdraw the registration.</t>

<t>Registration requests sent to the mailing list for review should use an appropriate subject (e.g., "Request to register AuthZEN Policy Decision Point Metadata: example").</t>

<t>Within the review period, the Designated Experts will either approve or deny the registration request, communicating this decision to the review list and IANA. Denials should include an explanation and, if applicable, suggestions as to how to make the request successful. The IANA escalation process is followed when the Designated Experts are not responsive within 14 days.</t>

<t>Criteria that should be applied by the Designated Experts includes determining whether the proposed registration duplicates existing functionality, determining whether it is likely to be of general applicability or whether it is useful only for a single application, and whether the registration makes sense.</t>

<t>IANA must only accept registry updates from the Designated Experts and should direct all requests for registration to the review mailing list.</t>

<t>It is suggested that multiple Designated Experts be appointed who are able to represent the perspectives of different applications using this specification, in order to enable broadly-informed review of registration decisions. In cases where a registration decision could be perceived as creating a conflict of interest for a particular Expert, that Expert should defer to the judgment of the other Experts.</t>

<t>The reason for the use of the mailing list is to enable public review of registration requests, enabling both Designated Experts and other interested parties to provide feedback on proposed registrations. The reason to allow the Designated Experts to allocate values prior to publication as a final specification is to enable giving authors of specifications proposing registrations the benefit of review by the Designated Experts before the specification is completely done, so that if problems are identified, the authors can iterate and fix them before publication of the final specification.</t>

<section anchor="iana-pdp-metadata-registry"><name>AuthZEN Policy Decision Point Metadata Registry</name>

<t>This specification asks IANA to establish the "AuthZEN Policy Decision Point Metadata" registry under the registry group "AuthZEN Parameters". The registry records the Policy Decision Point metadata parameter and a reference to the specification that defines it.</t>

<section anchor="registry-definition"><name>Registry Definition</name>

<t>Registry Name: AuthZEN Policy Decision Point Metadata</t>

<t>Registration Policy: Specification Required per <xref target="RFC8126"/></t>

<t>Reference: [This Document]</t>

</section>
<section anchor="iana-pdp-metadata-template"><name>Registration Template</name>

<dl>
  <dt>Metadata Name:</dt>
  <dd>
    <t>The name requested (e.g., "resource"). This name is case-sensitive. Names may not match other registered names in a case-insensitive manner unless the Designated Experts state that there is a compelling reason to allow an exception.</t>
  </dd>
  <dt>Metadata Description:</dt>
  <dd>
    <t>Brief description of the metadata (e.g., "Resource identifier URL").</t>
  </dd>
  <dt>Change Controller:</dt>
  <dd>
    <t>For IETF stream RFCs, list the "IETF". For others, give the name of the responsible party. Other details (e.g., postal address, email address, home page URI) may also be included.</t>
  </dd>
  <dt>Specification Document(s):</dt>
  <dd>
    <t>Reference to the document or documents that specify the parameter, preferably including URIs that can be used to retrieve copies of the documents. An indication of the relevant sections may also be included but is not required.</t>
  </dd>
</dl>

</section>
<section anchor="iana-pdp-metadata-initial"><name>Initial Registrations</name>

<dl>
  <dt>Metadata Name:</dt>
  <dd>
    <t><spanx style="verb">policy_decision_point</spanx></t>
  </dd>
  <dt>Metadata Description:</dt>
  <dd>
    <t>Base URL of the Policy Decision Point</t>
  </dd>
  <dt>Change Controller:</dt>
  <dd>
    <t>OpenID Foundation AuthZEN Working Group</t>
  </dd>
  <dt/>
  <dd>
    <t>mailto:openid-specs-authzen@lists.openid.net</t>
  </dd>
  <dt>Specification Document(s):</dt>
  <dd>
    <t><xref target="pdp-metadata-data-endpoint"/> of [This Document]</t>
  </dd>
  <dt>Metadata Name:</dt>
  <dd>
    <t><spanx style="verb">access_evaluation_endpoint</spanx></t>
  </dd>
  <dt>Metadata Description:</dt>
  <dd>
    <t>URL of the Policy Decision Point's Access Evaluation API endpoint</t>
  </dd>
  <dt>Change Controller:</dt>
  <dd>
    <t>OpenID Foundation AuthZEN Working Group</t>
  </dd>
  <dt/>
  <dd>
    <t>mailto:openid-specs-authzen@lists.openid.net</t>
  </dd>
  <dt>Specification Document(s):</dt>
  <dd>
    <t><xref target="pdp-metadata-data-endpoint"/> of [This Document]</t>
  </dd>
  <dt>Metadata Name:</dt>
  <dd>
    <t><spanx style="verb">access_evaluations_endpoint</spanx></t>
  </dd>
  <dt>Metadata Description:</dt>
  <dd>
    <t>URL of the Policy Decision Point's Access Evaluations API endpoint</t>
  </dd>
  <dt>Change Controller:</dt>
  <dd>
    <t>OpenID Foundation AuthZEN Working Group</t>
  </dd>
  <dt/>
  <dd>
    <t>mailto:openid-specs-authzen@lists.openid.net</t>
  </dd>
  <dt>Specification Document(s):</dt>
  <dd>
    <t><xref target="pdp-metadata-data-endpoint"/> of [This Document]</t>
  </dd>
  <dt>Metadata Name:</dt>
  <dd>
    <t><spanx style="verb">search_subject_endpoint</spanx></t>
  </dd>
  <dt>Metadata Description:</dt>
  <dd>
    <t>URL of the Policy Decision Point's Search API endpoint for Subject entities</t>
  </dd>
  <dt>Change Controller:</dt>
  <dd>
    <t>OpenID Foundation AuthZEN Working Group</t>
  </dd>
  <dt/>
  <dd>
    <t>mailto:openid-specs-authzen@lists.openid.net</t>
  </dd>
  <dt>Specification Document(s):</dt>
  <dd>
    <t><xref target="pdp-metadata-data-endpoint"/> of [This Document]</t>
  </dd>
  <dt>Metadata Name:</dt>
  <dd>
    <t><spanx style="verb">search_resource_endpoint</spanx></t>
  </dd>
  <dt>Metadata Description:</dt>
  <dd>
    <t>URL of the Policy Decision Point's Search API endpoint for Resource entities</t>
  </dd>
  <dt>Change Controller:</dt>
  <dd>
    <t>OpenID Foundation AuthZEN Working Group</t>
  </dd>
  <dt/>
  <dd>
    <t>mailto:openid-specs-authzen@lists.openid.net</t>
  </dd>
  <dt>Specification Document(s):</dt>
  <dd>
    <t><xref target="pdp-metadata-data-endpoint"/> of [This Document]</t>
  </dd>
  <dt>Metadata Name:</dt>
  <dd>
    <t><spanx style="verb">search_action_endpoint</spanx></t>
  </dd>
  <dt>Metadata Description:</dt>
  <dd>
    <t>URL of the Policy Decision Point's Search API endpoint for Action entities</t>
  </dd>
  <dt>Change Controller:</dt>
  <dd>
    <t>OpenID Foundation AuthZEN Working Group</t>
  </dd>
  <dt/>
  <dd>
    <t>mailto:openid-specs-authzen@lists.openid.net</t>
  </dd>
  <dt>Specification Document(s):</dt>
  <dd>
    <t><xref target="pdp-metadata-data-endpoint"/> of [This Document]</t>
  </dd>
  <dt>Metadata Name:</dt>
  <dd>
    <t><spanx style="verb">capabilities</spanx></t>
  </dd>
  <dt>Metadata Description:</dt>
  <dd>
    <t>Array of URNs describing specific Policy Decision Point capabilities</t>
  </dd>
  <dt>Change Controller:</dt>
  <dd>
    <t>OpenID Foundation AuthZEN Working Group</t>
  </dd>
  <dt/>
  <dd>
    <t>mailto:openid-specs-authzen@lists.openid.net</t>
  </dd>
  <dt>Specification Document(s):</dt>
  <dd>
    <t><xref target="pdp-metadata-data-capabilities"/> of [This Document]</t>
  </dd>
  <dt>Metadata Name:</dt>
  <dd>
    <t><spanx style="verb">signed_metadata</spanx></t>
  </dd>
  <dt>Metadata Description:</dt>
  <dd>
    <t>JWT containing metadata parameters about the protected resource as claims.</t>
  </dd>
  <dt>Change Controller:</dt>
  <dd>
    <t>OpenID Foundation AuthZEN Working Group</t>
  </dd>
  <dt/>
  <dd>
    <t>mailto:openid-specs-authzen@lists.openid.net</t>
  </dd>
  <dt>Specification Document(s):</dt>
  <dd>
    <t><xref target="pdp-metadata-data-sig"/> of [This Document]</t>
  </dd>
</dl>

</section>
</section>
<section anchor="iana-wk-registry"><name>Well-Known URI Registry</name>

<t>This specification asks IANA to register the well-known URI defined in <xref target="pdp-metadata-access"/> in the IANA "Well-Known URIs" registry <xref target="IANA.well-known-uris"/>.</t>

<section anchor="iana-wk-contents"><name>Registry Contents</name>

<dl>
  <dt>URI Suffix:</dt>
  <dd>
    <t>authzen-configuration</t>
  </dd>
  <dt>Reference:</dt>
  <dd>
    <t>[This Document]</t>
  </dd>
  <dt>Status:</dt>
  <dd>
    <t>permanent</t>
  </dd>
  <dt>Change Controller:</dt>
  <dd>
    <t>OpenID Foundation AuthZEN Working Group</t>
  </dd>
  <dt/>
  <dd>
    <t>mailto:openid-specs-authzen@lists.openid.net</t>
  </dd>
  <dt>Related Information:</dt>
  <dd>
    <t>(none)</t>
  </dd>
</dl>

</section>
</section>
<section anchor="iana-pdp-capabilities-registry"><name>AuthZEN Policy Decision Point Capabilities Registry</name>

<t>This specification asks IANA to establish the "AuthZEN Policy Decision Point Capabilities" registry under the registry group "AuthZEN Parameters". The registry contains PDP-specific capabilities or features. These URNs are intended to be used in Policy Decision Point metadata discovery documents (as described in <xref target="pdp-metadata"/>) to allow a PEP to determine the supported functionality of a given PDP instance. The content of this registry will be specified by AuthZEN-compliant PDP vendors that want to declare interoperable capabilities.</t>

<section anchor="iana-pdp-capabilities-definition"><name>Registry Definition</name>

<t>Registry Name: AuthZEN Policy Decision Point Capabilities</t>

<t>Registration Policy: Specification Required per <xref target="RFC8126"/></t>

<t>Reference: [This Document]</t>

</section>
<section anchor="iana-pdp-capabilities-template"><name>Registration Template</name>

<dl>
  <dt>Capability Name:</dt>
  <dd>
    <t>The name of the capability. This name MUST begin with the colon (":") character. This name is case-sensitive. Names may not match other registered names in a case-insensitive manner unless the Designated Experts state that there is a compelling reason to allow an exception.</t>
  </dd>
</dl>

<t>Capability URN: The URN of the AuthZEN Policy Decision Point Capability.</t>

<dl>
  <dt>Capability Description:</dt>
  <dd>
    <t>Brief description of the capability.</t>
  </dd>
  <dt>Change Controller:</dt>
  <dd>
    <t>OpenID Foundation AuthZEN Working Group</t>
  </dd>
  <dt/>
  <dd>
    <t>mailto:openid-specs-authzen@lists.openid.net</t>
  </dd>
  <dt>Specification Document(s):</dt>
  <dd>
    <t>Reference to the document or documents that specify the parameter, preferably including URIs that can be used to retrieve copies of the documents. An indication of the relevant sections may also be included but is not required.</t>
  </dd>
</dl>

</section>
</section>
<section anchor="iana-urn-namespace"><name>Registration of "authzen" URN Sub-namespace</name>

<t>This specification asks IANA to register a new URN sub-namespace within the "IETF URN Sub-namespace for Registered Protocol Parameter Identifiers" registry defined in <xref target="RFC3553"/>.</t>

<t>Registry Name: authzen</t>

<t>Specification: [This Document]</t>

<t>Repository: "AuthZEN Policy Decision Point Capabilities" registry (<xref target="iana-pdp-capabilities-registry"/> of [This Document])</t>

<t>Index value: Sub-parameters MUST be specified in UTF-8, using standard URI encoding where necessary.</t>

</section>
</section>


  </middle>

  <back>


<references title='References' anchor="sec-combined-references">

    <references title='Normative References' anchor="sec-normative-references">



<reference anchor="RFC6749">
  <front>
    <title>The OAuth 2.0 Authorization Framework</title>
    <author fullname="D. Hardt" initials="D." role="editor" surname="Hardt"/>
    <date month="October" year="2012"/>
    <abstract>
      <t>The OAuth 2.0 authorization framework enables a third-party application to obtain limited access to an HTTP service, either on behalf of a resource owner by orchestrating an approval interaction between the resource owner and the HTTP service, or by allowing the third-party application to obtain access on its own behalf. This specification replaces and obsoletes the OAuth 1.0 protocol described in RFC 5849. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6749"/>
  <seriesInfo name="DOI" value="10.17487/RFC6749"/>
</reference>
<reference anchor="RFC8259">
  <front>
    <title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
    <author fullname="T. Bray" initials="T." role="editor" surname="Bray"/>
    <date month="December" year="2017"/>
    <abstract>
      <t>JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format. It was derived from the ECMAScript Programming Language Standard. JSON defines a small set of formatting rules for the portable representation of structured data.</t>
      <t>This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="90"/>
  <seriesInfo name="RFC" value="8259"/>
  <seriesInfo name="DOI" value="10.17487/RFC8259"/>
</reference>
<reference anchor="RFC8615">
  <front>
    <title>Well-Known Uniform Resource Identifiers (URIs)</title>
    <author fullname="M. Nottingham" initials="M." surname="Nottingham"/>
    <date month="May" year="2019"/>
    <abstract>
      <t>This memo defines a path prefix for "well-known locations", "/.well-known/", in selected Uniform Resource Identifier (URI) schemes.</t>
      <t>In doing so, it obsoletes RFC 5785 and updates the URI schemes defined in RFC 7230 to reserve that space. It also updates RFC 7595 to track URI schemes that support well-known URIs in their registry.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8615"/>
  <seriesInfo name="DOI" value="10.17487/RFC8615"/>
</reference>
<reference anchor="RFC3553">
  <front>
    <title>An IETF URN Sub-namespace for Registered Protocol Parameters</title>
    <author fullname="M. Mealling" initials="M." surname="Mealling"/>
    <author fullname="L. Masinter" initials="L." surname="Masinter"/>
    <author fullname="T. Hardie" initials="T." surname="Hardie"/>
    <author fullname="G. Klyne" initials="G." surname="Klyne"/>
    <date month="June" year="2003"/>
    <abstract>
      <t>This document describes a new sub-delegation for the 'ietf' URN namespace for registered protocol items. The 'ietf' URN namespace is defined in RFC 2648 as a root for persistent URIs that refer to IETF- defined resources. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="73"/>
  <seriesInfo name="RFC" value="3553"/>
  <seriesInfo name="DOI" value="10.17487/RFC3553"/>
</reference>
<reference anchor="RFC9110">
  <front>
    <title>HTTP Semantics</title>
    <author fullname="R. Fielding" initials="R." role="editor" surname="Fielding"/>
    <author fullname="M. Nottingham" initials="M." role="editor" surname="Nottingham"/>
    <author fullname="J. Reschke" initials="J." role="editor" surname="Reschke"/>
    <date month="June" year="2022"/>
    <abstract>
      <t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document describes the overall architecture of HTTP, establishes common terminology, and defines aspects of the protocol that are shared by all versions. In this definition are core protocol elements, extensibility mechanisms, and the "http" and "https" Uniform Resource Identifier (URI) schemes.</t>
      <t>This document updates RFC 3864 and obsoletes RFCs 2818, 7231, 7232, 7233, 7235, 7538, 7615, 7694, and portions of 7230.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="97"/>
  <seriesInfo name="RFC" value="9110"/>
  <seriesInfo name="DOI" value="10.17487/RFC9110"/>
</reference>

<reference anchor="XACML" target="https://www.oasis-open.org/committees/xacml/repository/cs-xacml-specification-1.1.pdf">
  <front>
    <title>eXtensible Access Control Markup Language (XACML) Version 1.1</title>
    <author initials="S." surname="Godik" fullname="Simon Godik" role="editor">
      <organization>Overxeer</organization>
    </author>
    <author initials="T. M." surname="(Ed.)" fullname="Tim Moses (Ed.)" role="editor">
      <organization>Entrust</organization>
    </author>
    <date year="2006"/>
  </front>
</reference>


    </references>

    <references title='Informative References' anchor="sec-informative-references">



<reference anchor="RFC7519">
  <front>
    <title>JSON Web Token (JWT)</title>
    <author fullname="M. Jones" initials="M." surname="Jones"/>
    <author fullname="J. Bradley" initials="J." surname="Bradley"/>
    <author fullname="N. Sakimura" initials="N." surname="Sakimura"/>
    <date month="May" year="2015"/>
    <abstract>
      <t>JSON Web Token (JWT) is a compact, URL-safe means of representing claims to be transferred between two parties. The claims in a JWT are encoded as a JSON object that is used as the payload of a JSON Web Signature (JWS) structure or as the plaintext of a JSON Web Encryption (JWE) structure, enabling the claims to be digitally signed or integrity protected with a Message Authentication Code (MAC) and/or encrypted.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7519"/>
  <seriesInfo name="DOI" value="10.17487/RFC7519"/>
</reference>
<reference anchor="RFC7515">
  <front>
    <title>JSON Web Signature (JWS)</title>
    <author fullname="M. Jones" initials="M." surname="Jones"/>
    <author fullname="J. Bradley" initials="J." surname="Bradley"/>
    <author fullname="N. Sakimura" initials="N." surname="Sakimura"/>
    <date month="May" year="2015"/>
    <abstract>
      <t>JSON Web Signature (JWS) represents content secured with digital signatures or Message Authentication Codes (MACs) using JSON-based data structures. Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and an IANA registry defined by that specification. Related encryption capabilities are described in the separate JSON Web Encryption (JWE) specification.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7515"/>
  <seriesInfo name="DOI" value="10.17487/RFC7515"/>
</reference>
<reference anchor="RFC8126">
  <front>
    <title>Guidelines for Writing an IANA Considerations Section in RFCs</title>
    <author fullname="M. Cotton" initials="M." surname="Cotton"/>
    <author fullname="B. Leiba" initials="B." surname="Leiba"/>
    <author fullname="T. Narten" initials="T." surname="Narten"/>
    <date month="June" year="2017"/>
    <abstract>
      <t>Many protocols make use of points of extensibility that use constants to identify various protocol parameters. To ensure that the values in these fields do not have conflicting uses and to promote interoperability, their allocations are often coordinated by a central record keeper. For IETF protocols, that role is filled by the Internet Assigned Numbers Authority (IANA).</t>
      <t>To make assignments in a given registry prudently, guidance describing the conditions under which new values should be assigned, as well as when and how modifications to existing values can be made, is needed. This document defines a framework for the documentation of these guidelines by specification authors, in order to assure that the provided guidance for the IANA Considerations is clear and addresses the various issues that are likely in the operation of a registry.</t>
      <t>This is the third edition of this document; it obsoletes RFC 5226.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="26"/>
  <seriesInfo name="RFC" value="8126"/>
  <seriesInfo name="DOI" value="10.17487/RFC8126"/>
</reference>
<reference anchor="IANA.well-known-uris" target="https://www.iana.org/assignments/well-known-uris">
  <front>
    <title>Well-Known URIs</title>
    <author>
      <organization>IANA</organization>
    </author>
  </front>
</reference>
<reference anchor="RFC9525">
  <front>
    <title>Service Identity in TLS</title>
    <author fullname="P. Saint-Andre" initials="P." surname="Saint-Andre"/>
    <author fullname="R. Salz" initials="R." surname="Salz"/>
    <date month="November" year="2023"/>
    <abstract>
      <t>Many application technologies enable secure communication between two entities by means of Transport Layer Security (TLS) with Internet Public Key Infrastructure using X.509 (PKIX) certificates. This document specifies procedures for representing and verifying the identity of application services in such interactions.</t>
      <t>This document obsoletes RFC 6125.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9525"/>
  <seriesInfo name="DOI" value="10.17487/RFC9525"/>
</reference>
<reference anchor="RFC7234">
  <front>
    <title>Hypertext Transfer Protocol (HTTP/1.1): Caching</title>
    <author fullname="R. Fielding" initials="R." role="editor" surname="Fielding"/>
    <author fullname="M. Nottingham" initials="M." role="editor" surname="Nottingham"/>
    <author fullname="J. Reschke" initials="J." role="editor" surname="Reschke"/>
    <date month="June" year="2014"/>
    <abstract>
      <t>The Hypertext Transfer Protocol (HTTP) is a stateless \%application- level protocol for distributed, collaborative, hypertext information systems. This document defines HTTP caches and the associated header fields that control cache behavior or indicate cacheable response messages.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7234"/>
  <seriesInfo name="DOI" value="10.17487/RFC7234"/>
</reference>
<reference anchor="RFC2617">
  <front>
    <title>HTTP Authentication: Basic and Digest Access Authentication</title>
    <author fullname="J. Franks" initials="J." surname="Franks"/>
    <author fullname="P. Hallam-Baker" initials="P." surname="Hallam-Baker"/>
    <author fullname="J. Hostetler" initials="J." surname="Hostetler"/>
    <author fullname="S. Lawrence" initials="S." surname="Lawrence"/>
    <author fullname="P. Leach" initials="P." surname="Leach"/>
    <author fullname="A. Luotonen" initials="A." surname="Luotonen"/>
    <author fullname="L. Stewart" initials="L." surname="Stewart"/>
    <date month="June" year="1999"/>
    <abstract>
      <t>This document provides the specification for HTTP's authentication framework, the original Basic authentication scheme and a scheme based on cryptographic hashes, referred to as "Digest Access Authentication". [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="2617"/>
  <seriesInfo name="DOI" value="10.17487/RFC2617"/>
</reference>
<reference anchor="NIST.SP.800-162" target="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-162.pdf">
  <front>
    <title>Guide to Attribute Based Access Control (ABAC) Definition and Considerations</title>
    <author fullname="Vincent C. Hu" surname="Hu">
      <organization>Information Technology Laboratory</organization>
    </author>
    <author fullname="David Ferraiolo" surname="Ferraiolo">
      <organization>Information Technology Laboratory</organization>
    </author>
    <author fullname="Rick Kuhn" surname="Kuhn">
      <organization>Information Technology Laboratory</organization>
    </author>
    <author fullname="Adam Schnitzer" surname="Schnitzer">
      <organization>Information Technology Laboratory</organization>
    </author>
    <author fullname="Kenneth Sandlin" surname="Sandlin">
      <organization>Information Technology Laboratory</organization>
    </author>
    <author fullname="Robert Miller" surname="Miller">
      <organization>Information Technology Laboratory</organization>
    </author>
    <author fullname="Karen Scarfone" surname="Scarfone">
      <organization>Information Technology Laboratory</organization>
    </author>
    <author>
      <organization abbrev="NIST">National Institute of Standards and Technology</organization>
      <address>
        <postal>
          <country>US</country>
          <city>Gaithersburg</city>
        </postal>
      </address>
    </author>
    <date month="January" year="2014"/>
  </front>
  <seriesInfo name="NIST Special Publications (General)" value="800-162"/>
  <seriesInfo name="DOI" value="10.6028/NIST.SP.800-162"/>
</reference>
<reference anchor="RFC7493">
  <front>
    <title>The I-JSON Message Format</title>
    <author fullname="T. Bray" initials="T." role="editor" surname="Bray"/>
    <date month="March" year="2015"/>
    <abstract>
      <t>I-JSON (short for "Internet JSON") is a restricted profile of JSON designed to maximize interoperability and increase confidence that software can process it successfully with predictable results.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7493"/>
  <seriesInfo name="DOI" value="10.17487/RFC7493"/>
</reference>



    </references>

</references>


<?line 2023?>

<section anchor="terminology"><name>Terminology</name>
<dl>
  <dt>Subject:</dt>
  <dd>
    <t>The user or machine principal for whom an authorization decision is being requested.</t>
  </dd>
  <dt>Resource:</dt>
  <dd>
    <t>The target of the request; the resource about which the Authorization API is being made.</t>
  </dd>
  <dt>Action:</dt>
  <dd>
    <t>The operation the Subject has attempted on the Resource in an Authorization API call.</t>
  </dd>
  <dt>Context:</dt>
  <dd>
    <t>The environmental or contextual attributes for this request.</t>
  </dd>
  <dt>Decision:</dt>
  <dd>
    <t>The value of the evaluation decision made by the PDP: <spanx style="verb">true</spanx> for "allow", <spanx style="verb">false</spanx> for "deny".</t>
  </dd>
  <dt>PDP:</dt>
  <dd>
    <t>Policy Decision Point. The component or system that provides authorization decisions over the network interface defined here as the Authorization API.</t>
  </dd>
  <dt>PEP:</dt>
  <dd>
    <t>Policy Enforcement Point. The component or system that requests decisions from the PDP and enforces access to specific requests based on the decisions obtained from the PDP.</t>
  </dd>
</dl>

</section>
<section anchor="Acknowledgements"><name>Acknowledgements</name>

<t>This template uses extracts from templates written by
<contact fullname="Pekka Savola"/>, <contact fullname="Elwyn Davies"/> and
<contact fullname="Henrik Levkowetz"/>.</t>

</section>
<section anchor="document-history"><name>Document History</name>

<t>** To be removed from the final specification **</t>

<t><list style="symbols">
  <t>00 - Initial version.</t>
  <t>01 - First Implementers Draft. Refactored the optional fields of Subject, Action, and Resource into a <spanx style="verb">properties</spanx> sub-object, making it easier to design meaningful JSON Schema and protobuf contracts for the API.</t>
  <t>02 - Added the evaluations API.</t>
  <t>03 - Added the search (subject, resource, action) APIs.</t>
  <t>04 - Added metadata discovery.</t>
</list></t>

</section>
<section anchor="Notices"><name>Notices</name>
<t>Copyright (c) 2025 The OpenID Foundation.</t>

<t>The OpenID Foundation (OIDF) grants to any Contributor, developer, implementer,
or other interested party a non-exclusive, royalty free, worldwide copyright license to
reproduce, prepare derivative works from, distribute, perform and display, this
Implementers Draft, Final Specification, or Final Specification Incorporating Errata
Corrections solely for the purposes of (i) developing specifications, and (ii)
implementing Implementers Drafts, Final Specifications, and Final Specification
Incorporating Errata Corrections based on such documents, provided that attribution
be made to the OIDF as the source of the material, but that such attribution does not
indicate an endorsement by the OIDF.</t>

<t>The technology described in this specification was made available from contributions
from various sources, including members of the OpenID Foundation and others.
Although the OpenID Foundation has taken steps to help ensure that the technology
is available for distribution, it takes no position regarding the validity or scope of any
intellectual property or other rights that might be claimed to pertain to the
implementation or use of the technology described in this specification or the extent
to which any license under such rights might or might not be available; neither does it
represent that it has made any independent effort to identify any such rights. The
OpenID Foundation and the contributors to this specification make no (and hereby
expressly disclaim any) warranties (express, implied, or otherwise), including implied
warranties of merchantability, non-infringement, fitness for a particular purpose, or
title, related to this specification, and the entire risk as to implementing this
specification is assumed by the implementer. The OpenID Intellectual Property
Rights policy (found at openid.net) requires contributors to offer a patent promise not
to assert certain patent claims against other contributors and against implementers.
OpenID invites any interested party to bring to its attention any copyrights, patents,
patent applications, or other proprietary rights that may cover technology that may be
required to practice this specification.</t>

</section>

    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
        <name>Contributors</name>
    <contact initials="M." surname="Jordan" fullname="Marc Jordan">
      <organization>SGNL</organization>
      <address>
        <email>marc@sgnl.ai</email>
      </address>
    </contact>
    <contact initials="E." surname="Gustavson" fullname="Erik Gustavson">
      <organization>SGNL</organization>
      <address>
        <email>erik@sgnl.ai</email>
      </address>
    </contact>
    <contact initials="A." surname="Babeanu" fullname="Alexandre Babeanu">
      <organization>Indykite</organization>
      <address>
        <email>alex.babeanu@indykite.com</email>
      </address>
    </contact>
    <contact initials="D." surname="Hyland" fullname="David Hyland">
      <organization>ID Partners</organization>
      <address>
        <email>dave@idpartners.com.au</email>
      </address>
    </contact>
    <contact initials="J.-F." surname="Lombardo" fullname="Jean-FranÃ§ois Lombardo">
      <organization>AWS</organization>
      <address>
        <email>jeffsec@amazon.com</email>
      </address>
    </contact>
    <contact initials="A." surname="Olivier" fullname="Alex Olivier">
      <organization>Cerbos</organization>
      <address>
        <email>alex@cerbos.dev</email>
      </address>
    </contact>
    <contact initials="M." surname="Trimpe" fullname="Michiel Trimpe">
      <organization>VNG Realisatie</organization>
      <address>
        <email>michiel.trimpe@vng.nl</email>
      </address>
    </contact>
    </section>

  </back>

<!-- ##markdown-source:
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
jW8o2FTS3LuyZ/4/EesstF0wAQA=

-->

</rfc>

