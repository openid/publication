<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.19 (Ruby 3.1.3) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>


<rfc ipr="none" docName="authorization-api-1_0_01" category="std" consensus="true" submissionType="IETF" xml:lang="en">
  <front>
    <title abbrev="azapi">Authorization API 1.0 â€“ draft 01</title>

    <author initials="O." surname="Gazitt" fullname="Omri Gazitt" role="editor">
      <organization>Aserto</organization>
      <address>
        <email>omri@aserto.com</email>
      </address>
    </author>
    <author initials="D." surname="Brossard" fullname="David Brossard" role="editor">
      <organization>Axiomatics</organization>
      <address>
        <email>david.brossard@axiomatics.com</email>
      </address>
    </author>
    <author initials="A." surname="Tulshibagwale" fullname="Atul Tulshibagwale" role="editor">
      <organization>SGNL</organization>
      <address>
        <email>atul@sgnl.ai</email>
      </address>
    </author>

    <date year="2024" month="September" day="06"/>

    
    <workgroup>OpenID AuthZEN</workgroup>
    <keyword>Authorization</keyword> <keyword>Access Management</keyword> <keyword>XACML</keyword> <keyword>OPA</keyword> <keyword>Topaz</keyword> <keyword>Cedar</keyword> <keyword>PDP</keyword> <keyword>PEP</keyword> <keyword>ALFA</keyword>

    <abstract>


<?line 88?>

<t>The Authorization API enables Policy Decision Points (PDPs) and Policy Enforcement Points (PEPs) to communicate authorization requests and decisions to each other without requiring knowledge of each other's inner workings. The Authorization API is served by the PDP and is called by the PEP. The Authorization API includes an Evaluation endpoint, which provides specific access decisions. Other endpoints may be added in the future for other scenarios, including searching for subjects or resources.</t>



    </abstract>



  </front>

  <middle>


<?line 92?>

<section anchor="introduction"><name>Introduction</name>
<t>Computational services often implement access control within their components by separating Policy Decision Points (PDPs) from Policy Enforcement Points (PEPs). PDPs and PEPs are defined in XACML (<xref target="XACML"/>) and NIST's ABAC SP 800-162 (<xref target="ABAC"/>). Communication between PDPs and PEPs follows similar patterns across different software and services that require or provide authorization information. The Authorization API described in this document enables different providers to offer PDP and PEP capabilities without having to bind themselves to one particular implementation of a PDP or PEP.</t>

</section>
<section anchor="model"><name>Model</name>
<t>The Authorization API is a transport-agnostic API published by the PDP, to which the PEP acts as a client. Possible bindings of this specification, such as HTTPS or gRPC, are described in Transport (<xref target="transport"/>).</t>

<t>Authorization for the Authorization API itself is out of scope for this document, since authorization for APIs is well-documented elsewhere. For example, the Authorization API's HTTPS binding MAY support authorization using an <spanx style="verb">Authorization</spanx> header, using a <spanx style="verb">basic</spanx> or <spanx style="verb">bearer</spanx> token. Support for OAuth 2.0 (<xref target="RFC6749"/>) is RECOMMENDED.</t>

</section>
<section anchor="features"><name>Features</name>
<t>The core feature of the Authorization API is the Access Evaluation API, which enables a PEP to find out if a specific request can be permitted to access a specific resource. The following are non-normative examples:</t>

<t><list style="symbols">
  <t>Can Alice view document #123?</t>
  <t>Can Alice view document #123 at 16:30 on Tuesday, June 11, 2024?</t>
  <t>Can a manager print?</t>
</list></t>

</section>
<section anchor="api-version"><name>API Version</name>
<t>This document describes the API version 1. Any updates to this API through subsequent revisions of this document or other documents MAY augment this API, but MUST NOT modify the API described here. Augmentation MAY include additional API methods or additional parameters to existing API methods, additional authorization mechanisms, or additional optional headers in API requests. All API methods for version 1 MUST be immediately preceded by the relative URL path <spanx style="verb">/v1/</spanx>.</t>

</section>
<section anchor="information-model"><name>Information Model</name>
<t>The information model for requests and responses include the following entities: Subject, Action, Resource, Context, and Decision. These are all defined below.</t>

<section anchor="subject"><name>Subject</name>
<t>A Subject is the user or robotic principal about whom the Authorization API is being invoked. The Subject may be requesting access at the time the Authorization API is invoked.</t>

<t>A Subject is a JSON (<xref target="RFC8259"/>) object that contains two REQUIRED keys, <spanx style="verb">type</spanx> and <spanx style="verb">id</spanx>, which have a value typed <spanx style="verb">string</spanx>, and an OPTIONAL key, <spanx style="verb">properties</spanx>, with a value of a JSON object.</t>

<dl>
  <dt><spanx style="verb">type</spanx>:</dt>
  <dd>
    <t>REQUIRED. A <spanx style="verb">string</spanx> value that specifies the type of the Subject.</t>
  </dd>
  <dt><spanx style="verb">id</spanx>:</dt>
  <dd>
    <t>REQUIRED. A <spanx style="verb">string</spanx> value containing the unique identifier of the Subject, scoped to the <spanx style="verb">type</spanx>.</t>
  </dd>
  <dt><spanx style="verb">properties</spanx>:</dt>
  <dd>
    <t>OPTIONAL. A JSON object containing any number of key-value pairs, which can be used to express additional properties of a Subject.</t>
  </dd>
</dl>

<t>The following is a non-normative example of a Subject:</t>

<figure title="Example Subject" anchor="subject-example"><sourcecode type="json"><![CDATA[
{
  "type": "user",
  "id": "alice@acmecorp.com"
}
]]></sourcecode></figure>

<section anchor="subject-properties"><name>Subject Properties</name>
<t>Many authorization systems are stateless, and expect the client (PEP) to pass in any properties or attributes that are expected to be used in the evaluation of the authorization policy. To satisfy this requirement, Subjects MAY include zero or more additional attributes as key-value pairs, under the <spanx style="verb">properties</spanx> object.</t>

<t>An attribute can be single-valued or multi-valued. It can be a primitive type (string, boolean, number) or a complex type such as a JSON object or JSON array.</t>

<t>The following is a non-normative example of a Subject which adds a string-valued <spanx style="verb">department</spanx> property:</t>

<figure title="Example Subject with Additional Property" anchor="subject-department-example"><sourcecode type="json"><![CDATA[
{
  "type": "user",
  "id": "alice@acmecorp.com",
  "properties": {
    "department": "Sales"
  }
}
]]></sourcecode></figure>

<t>To increase interoperability, a few common properties are specified below:</t>

<section anchor="subject-ip-address"><name>IP Address</name>
<t>The IP Address of the Subject, identified by an <spanx style="verb">ip_address</spanx> field, whose value is a textual representation of an IP Address, as defined in <spanx style="verb">Textual Conventions for Internet Network Addresses</spanx> <xref target="RFC4001"/>.</t>

<t>The following is a non-normative example of a subject which adds the <spanx style="verb">ip_address</spanx> property:</t>

<figure title="Example Subject with IP Address" anchor="subject-ip-address-example"><sourcecode type="json"><![CDATA[
{
  "type": "user",
  "id": "alice@acmecorp.com",
  "properties": {
    "department": "Sales",
    "ip_address": "172.217.22.14"
  }
}
]]></sourcecode></figure>

</section>
<section anchor="subject-device-id"><name>Device ID</name>
<t>The Device Identifier of the Subject, identified by a <spanx style="verb">device_id</spanx> field, whose value is a string representation of the device identifier.</t>

<t>The following is a non-normative example of a subject which adds the <spanx style="verb">device_id</spanx> property:</t>

<figure title="Example Subject with Device ID" anchor="subject-device-id-example"><sourcecode type="json"><![CDATA[
{
  "type": "user",
  "id": "alice@acmecorp.com",
  "properties": {
    "department": "Sales",
    "ip_address": "172.217.22.14",
    "device_id": "8:65:ee:17:7e:0b"
  }
}
]]></sourcecode></figure>

</section>
</section>
</section>
<section anchor="resource"><name>Resource</name>
<t>A Resource is the target of an access request. It is a JSON (<xref target="RFC8259"/>) object that is constructed similar to a Subject entity. It has the follow keys:</t>

<dl>
  <dt><spanx style="verb">type</spanx>:</dt>
  <dd>
    <t>REQUIRED. A <spanx style="verb">string</spanx> value that specifies the type of the Resource.</t>
  </dd>
  <dt><spanx style="verb">id</spanx>:</dt>
  <dd>
    <t>REQUIRED. A <spanx style="verb">string</spanx> value containing the unique identifier of the Resource, scoped to the <spanx style="verb">type</spanx>.</t>
  </dd>
  <dt><spanx style="verb">properties</spanx>:</dt>
  <dd>
    <t>OPTIONAL. A JSON object containing any number of key-value pairs, which can be used to express additional properties of a Resource.</t>
  </dd>
</dl>

<section anchor="examples-non-normative"><name>Examples (non-normative)</name>

<t>The following is a non-normative example of a Resource with a <spanx style="verb">type</spanx> and a simple <spanx style="verb">id</spanx>:</t>

<figure title="Example Resource" anchor="resource-example"><sourcecode type="json"><![CDATA[
{
  "type": "book",
  "id": "123"
}
]]></sourcecode></figure>

<t>The following is a non-normative example of a Resource containing a <spanx style="verb">library_record</spanx> property, that is itself a JSON object:</t>

<figure title="Example Resource with Additional Property" anchor="resource-example-structured"><sourcecode type="json"><![CDATA[
{
  "type": "book",
  "id": "123",
  "properties": {
    "library_record":{
      "title": "AuthZEN in Action",
      "isbn": "978-0593383322"
    }
  }
}
]]></sourcecode></figure>

</section>
</section>
<section anchor="action"><name>Action</name>
<t>An Action is the type of access that the requester intends to perform.</t>

<t>Action is a JSON (<xref target="RFC8259"/>) object that contains a REQUIRED <spanx style="verb">name</spanx> key with a <spanx style="verb">string</spanx> value, and an OPTIONAL <spanx style="verb">properties</spanx> key with a JSON object value.</t>

<dl>
  <dt><spanx style="verb">name</spanx>:</dt>
  <dd>
    <t>REQUIRED. The name of the Action.</t>
  </dd>
  <dt><spanx style="verb">properties</spanx>:</dt>
  <dd>
    <t>OPTIONAL. A JSON object containing any number of key-value pairs, which can be used to express additional properties of an Action.</t>
  </dd>
</dl>

<t>The following is a non-normative example of an action:</t>

<figure title="Example Action" anchor="action-example"><sourcecode type="json"><![CDATA[
{
  "name": "can_read"
}
]]></sourcecode></figure>

<section anchor="common-action-values"><name>Common Action Values</name>
<t>Since many services follow a Create-Read-Update-Delete convention, a set of common Actions are defined. That said, an Action may be specific to the application being accessed or shared across applications but not listed in the common Actions below.</t>

<t>The following common Actions are defined:</t>

<t><list style="symbols">
  <t><spanx style="verb">can_access</spanx>: A generic Action that could mean any type of access. This is useful if the policy or application is not interested in different decisions for different types of Actions.</t>
  <t><spanx style="verb">can_create</spanx>: The Action to create a new entity, which MAY be defined by the <spanx style="verb">resource</spanx> field in the request.</t>
  <t><spanx style="verb">can_read</spanx>: The Action to read the content. Based on the Resource being accessed, this could mean a list functionality or reading an individual Resource's contents.</t>
  <t><spanx style="verb">can_update</spanx>: The Action to update the content of an existing Resource. This represents a partial update or an entire replacement of an entity that MAY be identified by the Resource in the request.</t>
  <t><spanx style="verb">can_delete</spanx>: The Action to delete a Resource. The specific entity MAY be identified by the Resource in the request.</t>
</list></t>

<t>PDP Policies MAY incorporate common Action names to provide different decisions based on the Action.</t>

</section>
</section>
<section anchor="context"><name>Context</name>
<t>The Context object is a set of attributes that represent environmental or contextual data about the request such as time of day. It is a JSON (<xref target="RFC8259"/>) object.</t>

<t>The following is a non-normative example of a Context:</t>

<figure title="Example Context" anchor="context-example"><sourcecode type="json"><![CDATA[
{
  "time": "1985-10-26T01:22-07:00"
}
]]></sourcecode></figure>

</section>
</section>
<section anchor="access-evaluation-api"><name>Access Evaluation API</name>

<t>The Access Evaluation API defines the message exchange pattern between a client (PEP) and an authorization service (PDP) for executing a single access evaluation.</t>

<section anchor="access-evaluation-request"><name>The Access Evaluation API Request</name>
<t>The Access Evaluation request is a 4-tuple constructed of the four previously defined entities:</t>

<dl>
  <dt><spanx style="verb">subject</spanx>:</dt>
  <dd>
    <t>REQUIRED. The subject (or principal) of type Subject</t>
  </dd>
  <dt><spanx style="verb">action</spanx>:</dt>
  <dd>
    <t>REQUIRED. The action (or verb) of type Action.</t>
  </dd>
  <dt><spanx style="verb">resource</spanx>:</dt>
  <dd>
    <t>REQUIRED. The resource of type Resource.</t>
  </dd>
  <dt><spanx style="verb">context</spanx>:</dt>
  <dd>
    <t>OPTIONAL. The context (or environment) of type Context.</t>
  </dd>
</dl>

<section anchor="example-non-normative"><name>Example (non-normative)</name>

<figure title="Example Request" anchor="request-example"><sourcecode type="json"><![CDATA[
{
  "subject": {
    "type": "user",
    "id": "alice@acmecorp.com"
  },
  "resource": {
    "type": "account",
    "id": "123"
  },
  "action": {
    "name": "can_read",
    "properties": {
      "method": "GET"
    }
  },
  "context": {
    "time": "1985-10-26T01:22-07:00"
  }
}
]]></sourcecode></figure>

</section>
</section>
<section anchor="access-evaluation-response"><name>The Access Evaluation API Response</name>
<t>The simplest form of a response is simply a boolean representing a Decision, indicated by a <spanx style="verb">"decision"</spanx> field.</t>

<dl>
  <dt><spanx style="verb">decision</spanx>:</dt>
  <dd>
    <t>REQUIRED. A boolean value that specifies whether the Decision is to allow or deny the operation.</t>
  </dd>
</dl>

<t>In this specification, assuming the evaluation was successful, there are only 2 possible responses:</t>

<t><list style="symbols">
  <t><spanx style="verb">true</spanx>: The access request is permitted to go forward.</t>
  <t><spanx style="verb">false</spanx>: The access request is denied and MUST NOT be permitted to go forward.</t>
</list></t>

<t>The response object MUST contain this boolean-valued Decision key.</t>

<section anchor="decision"><name>Access Evaluation Decision</name>
<t>The following is a non-normative example of a simple Decision:</t>

<figure title="Example Decision" anchor="decision-example"><sourcecode type="json"><![CDATA[
{
  "decision": true
}
]]></sourcecode></figure>

</section>
<section anchor="additional-context-in-a-response"><name>Additional Context in a Response</name>
<t>In addition to a <spanx style="verb">"decision"</spanx>, a response may contain a <spanx style="verb">"context"</spanx> field which can be any JSON object.  This context can convey additional information that can be used by the PEP as part of the decision evaluation process. Examples include:</t>

<t><list style="symbols">
  <t>XACML's notion of "advice" and "obligations"</t>
  <t>Hints for rendering UI state</t>
  <t>Instructions for step-up authentication</t>
</list></t>

</section>
<section anchor="example-context"><name>Example Context</name>
<t>An implementation MAY follow a structured approach to <spanx style="verb">"context"</spanx>, in which it presents the reasons that an authorization request failed.</t>

<t><list style="symbols">
  <t>A list of identifiers representing the items (policies, graph nodes, tuples) that were used in the decision-making process.</t>
  <t>A list of reasons as to why access is permitted or denied.</t>
</list></t>

<section anchor="reasons"><name>Reasons</name>
<t>Reasons MAY be provided by the PDP.</t>

<section anchor="reason-field"><name>Reason Field</name>
<t>A Reason Field is a JSON object that has keys and values of type <spanx style="verb">string</spanx>. The following are non-normative examples of Reason Field objects:</t>

<figure title="Example Reason" anchor="reason-example"><sourcecode type="json"><![CDATA[
{
  "en": "location restriction violation"
}
]]></sourcecode></figure>

</section>
<section anchor="reason-object"><name>Reason Object</name>
<t>A Reason Object specifies a particular reason. It is a JSON object that has the following fields:</t>

<dl>
  <dt><spanx style="verb">id</spanx>:</dt>
  <dd>
    <t>REQUIRED. A string value that specifies the reason within the scope of a particular response.</t>
  </dd>
  <dt><spanx style="verb">reason_admin</spanx>:</dt>
  <dd>
    <t>OPTIONAL. The reason, which MUST NOT be shared with the user, but useful for administrative purposes that indicates why the access was denied. The value of this field is a Reason Field object (<xref target="reason-field"/>).</t>
  </dd>
  <dt><spanx style="verb">reason_user</spanx>:</dt>
  <dd>
    <t>OPTIONAL. The reason, which MAY be shared with the user that indicates why the access was denied. The value of this field is a Reason Field object (<xref target="reason-field"/>).</t>
  </dd>
</dl>

<t>The following is a non-normative example of a Reason Object:</t>

<figure title="Example of a Reason Object" anchor="example-reason-object"><sourcecode type="json"><![CDATA[
{
  "id": "0",
  "reason_admin": {
    "en": "Request failed policy C076E82F"
  },
  "reason_user": {
    "en-403": "Insufficient privileges. Contact your administrator",
    "es-403": "Privilegios insuficientes. PÃ³ngase en contacto con su administrador"
  }
}
]]></sourcecode></figure>

</section>
</section>
</section>
<section anchor="sample-response-with-additional-context-non-normative"><name>Sample Response with additional context (non-normative)</name>

<figure title="Example Response with Context" anchor="response-with-context-example"><sourcecode type="json"><![CDATA[
{
  "decision": true,
  "context": {
    "id": "0",
    "reason_admin": {
      "en": "Request failed policy C076E82F"
    },
    "reason_user": {
      "en-403": "Insufficient privileges. Contact your administrator",
      "es-403": "Privilegios insuficientes. PÃ³ngase en contacto con su administrador"
    }
  }
}
]]></sourcecode></figure>

</section>
</section>
</section>
<section anchor="transport"><name>Transport</name>

<t>This specification defines an HTTPS binding which MUST be implemented by a compliant PDP.</t>

<t>Additional transport bindings (e.g. gRPC) MAY be defined in the future in the form of profiles, and MAY be implemented by a PDP.</t>

<section anchor="https-binding"><name>HTTPS Binding</name>

<section anchor="https-access-evaluation-request"><name>HTTPS Access Evaluation Request</name>
<t>The Access Evaluation Request is an HTTPS request with <spanx style="verb">content-type</spanx> of <spanx style="verb">application/json</spanx>. Its body is a JSON object that contains the Access Evaluation Request, as defined in <xref target="access-evaluation-request"/>.</t>

<t>The following is a non-normative example of the HTTPS binding of the Access Evaluation Request:</t>

<figure title="Example of an HTTPS Access Evaluation Request" anchor="example-access-evaluation-request"><sourcecode type="http"><![CDATA[
POST /access/v1/evaluation HTTP/1.1
Host: pdp.mycompany.com
Authorization: Bearer <myoauthtoken>
X-Request-ID: bfe9eb29-ab87-4ca3-be83-a1d5d8305716

{
  "subject": {
    "type": "user",
    "id": "alice@acmecorp.com"
  },
  "resource": {
    "type": "todo",
    "id": "1",
  },
  "action": {
    "name": "can_read"
  },
  "context": {
    "time": "1985-10-26T01:22-07:00"
  }
}
]]></sourcecode></figure>

</section>
<section anchor="access-evaluation-https-response"><name>Access Evaluation HTTPS Response</name>
<t>The success response to an Access Evaluation Request is an Access Evaluation Response. It is an HTTPS response with a <spanx style="verb">status</spanx> code of <spanx style="verb">200</spanx>, and <spanx style="verb">content-type</spanx> of <spanx style="verb">application/json</spanx>. Its body is a JSON object that contains the Access Evaluation Response, as defined in <xref target="access-evaluation-response"/>.</t>

<t>Following is a non-normative example of an HTTPS Access Evaluation Response:</t>

<figure title="Example of an HTTPS Access Evaluation Response" anchor="example-access-evaluation-response"><sourcecode type="http"><![CDATA[
HTTP/1.1 OK
Content-type: application/json
X-Request-ID: bfe9eb29-ab87-4ca3-be83-a1d5d8305716

{
  "decision": true
}
]]></sourcecode></figure>

</section>
<section anchor="error-responses"><name>Error Responses</name>
<t>The following error responses are common to all methods of the Authorization API. The error response is indicated by an HTTPS status code (<xref section="15" sectionFormat="of" target="RFC9110"/>) that indicates error.</t>

<t>The following errors are indicated by the status codes defined below:</t>

<texttable title="HTTPS Error status codes" anchor="_table-error-status-codes">
      <ttcol align='left'>Code</ttcol>
      <ttcol align='left'>Description</ttcol>
      <ttcol align='left'>HTTPS Body Content</ttcol>
      <c>400</c>
      <c>Bad Request</c>
      <c>An error message string</c>
      <c>401</c>
      <c>Unauthorized</c>
      <c>An error message string</c>
      <c>403</c>
      <c>Forbidden</c>
      <c>An error message string</c>
      <c>500</c>
      <c>Internal error</c>
      <c>An error message string</c>
</texttable>

<t>Note: HTTPS errors are returned by the PDP to indicate an error condition relating to the request or its processing, and are unrelated to the outcome of an authorization decision, which is always returned with a <spanx style="verb">200</spanx> status code and a response payload.</t>

<t>To make this concrete:
* a <spanx style="verb">401</spanx> HTTPS status code indicates that the caller (policy enforcement point) did not properly authenticate to the PDP - for example, by omitting a required <spanx style="verb">Authorization</spanx> header, or using an invalid access token.
* the PDP indicates to the caller that the authorization request is denied by sending a response with a <spanx style="verb">200</spanx> HTTPS status code, along with a payload of <spanx style="verb">{ "decision": false }</spanx>.</t>

</section>
<section anchor="request-identification"><name>Request Identification</name>
<t>All requests to the API MAY have request identifiers to uniquely identify them. The API client (PEP) is responsible for generating the request identifier. If present, the request identifier SHALL be provided using the HTTPS Header <spanx style="verb">X-Request-ID</spanx>. The value of this header is an arbitrary string. The following non-normative example describes this header:</t>

<figure title="Example HTTPS request with a Request Id Header" anchor="request-id-example"><sourcecode type="http"><![CDATA[
POST /access/v1/evaluation HTTP/1.1
Authorization: Bearer mF_9.B5f-4.1JqM
X-Request-ID: bfe9eb29-ab87-4ca3-be83-a1d5d8305716
]]></sourcecode></figure>

</section>
<section anchor="request-identification-in-a-response"><name>Request Identification in a Response</name>
<t>A PDP responding to an Authorization API request that contains an <spanx style="verb">X-Request-ID</spanx> header MUST include a request identifier in the response. The request identifier is specified in the HTTPS Response header: <spanx style="verb">X-Request-ID</spanx>. If the PEP specified a request identifier in the request, the PDP MUST include the same identifier in the response to that request.</t>

<t>The following is a non-normative example of an HTTPS Response with this header:</t>

<figure title="Example HTTPS response with a Request Id Header" anchor="example-response-request-id"><sourcecode type="http"><![CDATA[
HTTP/1.1 OK
Content-type: application/json
X-Request-ID: bfe9eb29-ab87-4ca3-be83-a1d5d8305716
]]></sourcecode></figure>

</section>
</section>
</section>
<section anchor="IANA"><name>IANA Considerations</name>

<t>This specification does not introduce any new identifiers that would require registration with IANA.</t>

</section>
<section anchor="Security"><name>Security Considerations</name>

<section anchor="communication-integrity-and-confidentiality"><name>Communication Integrity and Confidentiality</name>

<t>In the ABAC architecture, the PEP-PDP connection is the most sensitive one and needs to be secured to guarantee:</t>

<t><list style="symbols">
  <t>Integrity</t>
  <t>Confidentiality</t>
</list></t>

<t>As a result, the connection between the PEP and the PDP MUST be secured using the most adequate means given the choice of transport (e.g. TLS for HTTP REST).</t>

</section>
<section anchor="policy-confidentiality-and-sender-authentication"><name>Policy Confidentiality and Sender Authentication</name>

<t>Additionally, the PDP SHOULD authenticate the calling PEP. There are several ways authentication can be established. These ways are out of scope of this specification. They MAY include:</t>

<t><list style="symbols">
  <t>Mutual TLS</t>
  <t>OAuth-based authentication</t>
  <t>API key</t>
</list></t>

<t>The choice and strength of either mechanism is not in scope.</t>

<t>Authenticating the PEP allows the PDP to avoid common attacks (such as DoS - see below) and/or reveal its internal policies. A malicious actor could craft a large number of requests to try and understand what policies the PDP is configured with. Requesting a client (PEP) be authenticated mitigates that risk.</t>

</section>
<section anchor="trust"><name>Trust</name>

<t>In ABAC, there is occasionally conversations around the trust between PEP and PDP: how can the PDP trust the PEP to send the right values in? This is a misplaced concern. The PDP must trust the PEP as ultimately, the PEP is the one responsible for enforcing the decision the PDP produces.</t>

</section>
<section anchor="availability-denial-of-service"><name>Availability &amp; Denial of Service</name>

<t>The PDP SHOULD apply reasonable protections to avoid common attacks tied to request payload size, the number of requests, invalid JSON, nested JSON attacks, or memory consumption. Rate limiting is one such way to address such issues.</t>

</section>
</section>


  </middle>

  <back>


<references title='References' anchor="sec-combined-references">

    <references title='Normative References' anchor="sec-normative-references">





<reference anchor="RFC4001">
<front>
<title>Textual Conventions for Internet Network Addresses</title>
<author fullname="M. Daniele" initials="M." surname="Daniele"><organization/></author>
<author fullname="B. Haberman" initials="B." surname="Haberman"><organization/></author>
<author fullname="S. Routhier" initials="S." surname="Routhier"><organization/></author>
<author fullname="J. Schoenwaelder" initials="J." surname="Schoenwaelder"><organization/></author>
<date month="February" year="2005"/>
<abstract><t>This MIB module defines textual conventions to represent commonly used Internet network layer addressing information.  The intent is that these textual conventions will be imported and used in MIB modules that would otherwise define their own representations.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name="RFC" value="4001"/>
<seriesInfo name="DOI" value="10.17487/RFC4001"/>
</reference>



<reference anchor="RFC6749">
<front>
<title>The OAuth 2.0 Authorization Framework</title>
<author fullname="D. Hardt" initials="D." role="editor" surname="Hardt"><organization/></author>
<date month="October" year="2012"/>
<abstract><t>The OAuth 2.0 authorization framework enables a third-party application to obtain limited access to an HTTP service, either on behalf of a resource owner by orchestrating an approval interaction between the resource owner and the HTTP service, or by allowing the third-party application to obtain access on its own behalf.  This specification replaces and obsoletes the OAuth 1.0 protocol described in RFC 5849.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name="RFC" value="6749"/>
<seriesInfo name="DOI" value="10.17487/RFC6749"/>
</reference>



<reference anchor="RFC8259">
<front>
<title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
<author fullname="T. Bray" initials="T." role="editor" surname="Bray"><organization/></author>
<date month="December" year="2017"/>
<abstract><t>JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format.  It was derived from the ECMAScript Programming Language Standard.  JSON defines a small set of formatting rules for the portable representation of structured data.</t><t>This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t></abstract>
</front>
<seriesInfo name="STD" value="90"/>
<seriesInfo name="RFC" value="8259"/>
<seriesInfo name="DOI" value="10.17487/RFC8259"/>
</reference>



<reference anchor="RFC9110">
<front>
<title>HTTP Semantics</title>
<author fullname="R. Fielding" initials="R." role="editor" surname="Fielding"><organization/></author>
<author fullname="M. Nottingham" initials="M." role="editor" surname="Nottingham"><organization/></author>
<author fullname="J. Reschke" initials="J." role="editor" surname="Reschke"><organization/></author>
<date month="June" year="2022"/>
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document describes the overall architecture of HTTP, establishes common terminology, and defines aspects of the protocol that are shared by all versions. In this definition are core protocol elements, extensibility mechanisms, and the &quot;http&quot; and &quot;https&quot; Uniform Resource Identifier (URI) schemes. </t><t>This document updates RFC 3864 and obsoletes RFCs 2818, 7231, 7232, 7233, 7235, 7538, 7615, 7694, and portions of 7230.</t></abstract>
</front>
<seriesInfo name="STD" value="97"/>
<seriesInfo name="RFC" value="9110"/>
<seriesInfo name="DOI" value="10.17487/RFC9110"/>
</reference>

<reference anchor="RFC9493">
  <front>
    <title>Subject Identifiers for Security Event Tokens</title>
    <author fullname="A. Backman" initials="A." role="editor" surname="Backman"/>
    <author fullname="M. Scurtescu" initials="M." surname="Scurtescu"/>
    <author fullname="P. Jain" initials="P." surname="Jain"/>
    <date month="December" year="2023"/>
    <abstract>
      <t>Security events communicated within Security Event Tokens may support a variety of identifiers to identify subjects related to the event. This specification formalizes the notion of Subject Identifiers as structured information that describes a subject and named formats that define the syntax and semantics for encoding Subject Identifiers as JSON objects. It also establishes a registry for defining and allocating names for such formats as well as the JSON Web Token (JWT) "sub_id" Claim.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9493"/>
  <seriesInfo name="DOI" value="10.17487/RFC9493"/>
</reference>


<reference anchor="XACML" target="https://www.oasis-open.org/committees/xacml/repository/cs-xacml-specification-1.1.pdf">
  <front>
    <title>eXtensible Access Control Markup Language (XACML) Version 1.1</title>
    <author initials="S." surname="Godik" fullname="Simon Godik" role="editor">
      <organization>Overxeer</organization>
    </author>
    <author initials="T. M." surname="(Ed.)" fullname="Tim Moses (Ed.)" role="editor">
      <organization>Entrust</organization>
    </author>
    <date year="2006"/>
  </front>
</reference>


    </references>

    <references title='Informative References' anchor="sec-informative-references">

<reference anchor="ABAC" target="https://us.artechhouse.com/Attribute-Based-Access-Control-P1911.aspx">
  <front>
    <title>Attribute-Based Access Control</title>
    <author initials="K." surname="R." fullname="Kuhn, R.">
      <organization>NIST</organization>
    </author>
    <date year="2018"/>
  </front>
</reference>


    </references>

</references>


<?line 550?>

<section anchor="terminology"><name>Terminology</name>
<dl>
  <dt>Subject:</dt>
  <dd>
    <t>The user or robotic principal about whom the Authorization API call is being made.</t>
  </dd>
  <dt>Resource:</dt>
  <dd>
    <t>The target of the request; the resource about which the Authorization API is being made.</t>
  </dd>
  <dt>Action:</dt>
  <dd>
    <t>The operation the Subject has attempted on the Resource in an Authorization API call.</t>
  </dd>
  <dt>Context:</dt>
  <dd>
    <t>The environmental or contextual attributes for this request.</t>
  </dd>
  <dt>Decision:</dt>
  <dd>
    <t>The value of the evaluation decision made by the PDP: <spanx style="verb">true</spanx> for "allow", <spanx style="verb">false</spanx> for "deny".</t>
  </dd>
  <dt>PDP:</dt>
  <dd>
    <t>Policy Decision Point. The component or system that provides authorization decisions over the network interface defined here as the Authorization API.</t>
  </dd>
  <dt>PEP:</dt>
  <dd>
    <t>Policy Enforcement Point. The component or system that requests decisions from the PDP and enforces access to specific requests based on the decisions obtained from the PDP.</t>
  </dd>
</dl>

</section>
<section anchor="Acknowledgements"><name>Acknowledgements</name>

<t>This template uses extracts from templates written by
<contact fullname="Pekka Savola"/>, <contact fullname="Elwyn Davies"/> and
<contact fullname="Henrik Levkowetz"/>.</t>

</section>
<section anchor="Notices"><name>Notices</name>
<t>Copyright (c) 2024 The OpenID Foundation.</t>

<t>The OpenID Foundation (OIDF) grants to any Contributor, developer, implementer, or other interested party a non-exclusive, royalty free, worldwide copyright license to reproduce, prepare
derivative works from, distribute, perform and display, this Implementers Draft or Final Specification solely for the purposes of (i) developing specifications, and (ii) implementing
Implementers Drafts and Final Specifications based on such documents, provided that attribution be made to the OIDF as the source of the material, but that such attribution does not
indicate an endorsement by the OIDF.</t>

<t>The technology described in this specification was made available from contributions from various sources, including members of the OpenID Foundation and others. Although the OpenID
Foundation has taken steps to help ensure that the technology is available for distribution, it takes no position regarding the validity or scope of any intellectual property or other
rights that might be claimed to pertain to the implementation or use of the technology described in this specification or the extent to which any license under such rights might or might
not be available; neither does it represent that it has made any independent effort to identify any such rights. The OpenID Foundation and the contributors to this specification make no
(and hereby expressly disclaim any) warranties (express, implied, or otherwise), including implied warranties of merchantability, non-infringement, fitness for a particular purpose, or
title, related to this specification, and the entire risk as to implementing this specification is assumed by the implementer. The OpenID Intellectual Property Rights policy requires
contributors to offer a patent promise not to assert certain patent claims against other contributors and against implementers. The OpenID Foundation invites any interested party to bring
to its attention any copyrights, patents, patent applications, or other proprietary rights that may cover technology that may be required to practice this specification.</t>

</section>
<section anchor="document-history"><name>Document History</name>

<t>[[ To be removed from the final specification ]]</t>

<t><list style="symbols">
  <t>00 - Initial version.</t>
  <t>01 - Refactored the optional fields of Subject, Action, and Resource into a <spanx style="verb">properties</spanx> sub-object, making it easier to design meaningful JSON-schema and protobuf contracts for the API.</t>
</list></t>

</section>

    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
        <name>Contributors</name>
    <contact initials="M." surname="Jordan" fullname="Marc Jordan">
      <organization>SGNL</organization>
      <address>
        <email>marc@sgnl.ai</email>
      </address>
    </contact>
    <contact initials="E." surname="Gustavson" fullname="Erik Gustavson">
      <organization>SGNL</organization>
      <address>
        <email>erik@sgnl.ai</email>
      </address>
    </contact>
    <contact initials="A." surname="Babeanu" fullname="Alex Babeanu">
      <organization>3Edges</organization>
      <address>
        <email>alex@3edges.com</email>
      </address>
    </contact>
    </section>

  </back>

<!-- ##markdown-source:
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

-->

</rfc>

