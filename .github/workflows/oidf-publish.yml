name: OIDF Publish
on:
  pull_request_review:
    types: 
    - submitted
  workflow_dispatch:

jobs:
  publish_to_specs:
    name: OIDF-Publish
    runs-on: ubuntu-latest
    environment: openid.net/specs/
    steps:
      - uses: actions/checkout@v4
        with: 
          fetch-depth: 0
          ref: ${{ github.head_ref }}
          ssh-key: ${{ secrets.OPENID_PUBLICATION_ACTION_DEPLOY_KEY }}

      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: openid/publication-checks
          path: publication-scripts
          ssh-key: ${{ secrets.OPENID_PUBLICATION_DEPLOY_KEY }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Python requirements
        run: |
          cd ./publication-scripts
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          echo "::set-output name=path::$(which python)"

      - name: OpenID publication prep
        run : |
          echo
          git checkout ${{ github.event.pull_request.head.ref }} 
          # echo "Current Branch: $(git branch --show-current)"

          echo $changedfiles
          echo "------"
          mkdir ./to-publish
          # ls -l ./publication-scripts
          cd ./publication-scripts
          chmod +x ./publish.sh
          ./publish.sh
          echo "--- deleted files - start ---"
          pwd
          ls -l
          cat delete_files.txt
          echo "--- deleted files - end ---"
          cd ../to-publish
          # ls -l
          PUBLISH_LIST=$(ls)
          # GIT_TRACE=true
          echo "PUBLISH_LIST = $PUBLISH_LIST"

          cp ./* ../sync/specs
          cd ../sync/specs
          echo "In /sync/specs now!"
          git ls-files --others --exclude-standard
          echo "Adding files to branch!"
          git add -A .
          git status
          git config --global user.name "OIDF GitHub Automation"
          git config --global user.email "github@oidf.org"
          
          echo "Commiting next!"
          git commit -m "$PUBLISH_LIST"

          echo "Merge and Push next!"
          # Check out target branch (e.g. main)
          git checkout ${{ github.event.pull_request.base.ref }}
          # merge head branch into base (e.g. main)
          git merge --no-ff ${{ github.event.pull_request.head.ref }} -m "Merge approved PR #${{ github.event.pull_request.number }}"
          # echo $(git status)
          # Push changes to remote
          git push origin ${{ github.event.pull_request.base.ref }}

      - name: Github tidy up
        run: |
          gh pr close ${{ github.event.pull_request.number }} --delete-branch
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update remote clone on OIDF Web Server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.OIDF_SPECS_HOST }}
          username: ${{ secrets.OIDF_USERID }}
          key: ${{ secrets.OIDF_USERID_KEY }}
          port: ${{ secrets.OIDF_SPECS_PORT }}
          script: |
              cd /var/www/openid.net/publication
              git status
              git pull

  


